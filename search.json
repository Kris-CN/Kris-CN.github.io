[{"title":"时也，运也，命也","url":"/posts/931683055/","content":"<p>&emsp;&emsp;天有不测风云，人有旦夕祸福。蜈蚣百足，行不及蛇；雄鸡两翼，飞不过鸦。马有千里之程，无骑不能自往；人有冲天之志，非运不能自通。<br>&emsp;&emsp;盖闻：人生在世，富贵不能淫，贫贱不能移。文章盖世，孔子厄于陈邦；武略超群，太公钓于渭水。颜渊命短，殊非凶恶之徒；盗跖年长，岂是善良之辈。尧帝明圣，却生不肖之儿；瞽叟愚顽，反生大孝之子。张良原是布衣，萧何曾为县吏。晏子身无五尺，封作齐国宰相；孔明卧居草庐，能作蜀汉军师。楚霸虽雄，败于乌江自刎；汉王虽弱，竟有万里江山。李广有射虎之威，到老无封；冯唐有乘龙之才，一生不遇。韩信未遇之时，无一日三餐，及至遇行，腰悬三齐玉印，一旦时衰，死于阴人之手。<br>&emsp;&emsp;有先贫而后富，有老壮而少衰。满腹文章，白发竟然不中；才疏学浅，少年及第登科。深院宫娥，运退反为妓妾；风流妓女，时来配作夫人。<br>&emsp;&emsp;青春美女，却招愚蠢之夫；俊秀郎君，反配粗丑之妇。蛟龙未遇，潜水于鱼鳖之间；君子失时，拱手于小人之下。衣服虽破，常存仪礼之容；面带忧愁，每抱怀安之量。时遭不遇，只宜安贫守份；心若不欺，必然扬眉吐气。初贫君子，天然骨骼生成；乍富小人，不脱贫寒肌体。<br>&emsp;&emsp;天不得时，日月无光；地不得时，草木不生；水不得时，风浪不平；人不得时，利运不通。注福注禄，命里已安排定，富贵谁不欲？人若不依根基八字，岂能为卿为相？<br>&emsp;&emsp;余者，居洛阳之时，朝投僧寺，夜宿破窑。布衣不能遮其体，饘粥不能充其饥。上人嫌，下人憎，皆言余之贱也，余曰：非贱也，乃时也，运也，命也。余后登高及第，入中书，官至极品，位列三公，思衣则有绮罗千箱，思食则有百味珍馐，有挞百僚之杖，有斩佞臣之剑，出则壮士执鞭，入则佳人扶袂，廪有余粟，库有余财，人皆言余之贵也，余曰：非贵也，乃时也，运也，命也。<br>&emsp;&emsp;嗟呼！人生在世，富贵不可尽用，贫贱不可自欺，听由天地循环，周而复始焉。  \n          </p>\n","categories":["感悟"],"tags":["感悟"]},{"title":"852.山脉数组的峰顶索引","url":"/posts/1792943448/","content":"<h4 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h4><p>符合下列属性的数组 arr 称为 山脉数组 ：<br>arr.length &gt;= 3<br>存在 i（0 &lt; i &lt; arr.length - 1）使得：<br>arr[0] &lt; arr[1] &lt; … arr[i-1] &lt; arr[i]<br>arr[i] &gt; arr[i+1] &gt; … &gt; arr[arr.length - 1]<br>给你由整数组成的山脉数组 arr ，返回任何满足 arr[0] &lt; arr[1] &lt; … arr[i - 1] &lt; arr[i] &gt; arr[i + 1] &gt; … &gt; arr[arr.length - 1] 的下标 i 。  </p>\n<p><strong>示例 1：</strong><br>输入：arr = [0,1,0]<br>输出：1<br><strong>示例 2：</strong><br>输入：arr = [0,2,1,0]<br>输出：1<br>**示例 3：  **<br>输入：arr = [0,10,5,2]<br>输出：1<br><strong>示例 4：</strong><br>输入：arr = [3,4,5,1]<br>输出：2<br>**示例 5： **<br>输入：arr = [24,69,100,99,79,78,67,36,26,19]<br>输出：2    </p>\n<h4 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h4><p>常规的二分，思路还是比较简单的，正常设置left、mid、right，在中间的时候判断mid两边的元素：1.当nums[mid]&lt;nums[mid-1]时，证明还没到峰值，right移动到mid左侧；2.当nums[mid]&gt;nums[mid-1]时再判断是否nums[mid]&gt;nums[mid+1]，若成立证明找到峰值，直接返回mid，若不成立则证明已经过了峰值，此时将reft移动到mid右边。这里要注意越界的问题，在计算完mid后判断一下是否已经到达最低点（0），若达到直接推出循环，同时返回right（因为在你计算mid后，mid已经移动到right左边，此时mid为0已经不能比较了，所以之前保留的right一定就是峰值）。这是常规做法，后面有更高效率的写法我再研究研究。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">peakIndexInMountainArray</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> left,mid,right;</span><br><span class=\"line\">    left=<span class=\"number\">0</span>;</span><br><span class=\"line\">     mid=<span class=\"number\">10</span>;</span><br><span class=\"line\">    right=arr.length-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(right&gt;=left)&#123;</span><br><span class=\"line\">        mid=left+(right-left)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mid==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[mid]&lt;arr[mid-<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            right=mid-<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(arr[mid]&gt;arr[mid-<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[mid]&gt;arr[mid+<span class=\"number\">1</span>])</span><br><span class=\"line\">                <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> left=mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["LeetCode"],"tags":["LeetCode"]},{"title":"9-5随笔","url":"/posts/3121163870/","content":"<p>&emsp;&emsp;人总是会成为成为自己讨厌的人，并乐于成为自己讨厌的人，何为讨厌？嫉妒罢了。<br><img src=\"https://img-blog.csdnimg.cn/20210905234037133.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5aeL57uI5Zyo5Luw5pyb5aSn5L2s,size_20,color_FFFFFF,t_70,g_se,x_16\"></p>\n","categories":["感悟"],"tags":["感悟"]},{"title":"1351.统计有序矩阵中的负数(高复杂度)","url":"/posts/936958119/","content":"<h4 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h4><p>(传送门)[<a href=\"https://leetcode-cn.com/problems/count-negative-numbers-in-a-sorted-matrix]\">https://leetcode-cn.com/problems/count-negative-numbers-in-a-sorted-matrix]</a><br>给你一个 m * n 的矩阵 grid，矩阵中的元素无论是按行还是按列，都以非递增顺序排列。   <br>请你统计并返回 grid 中 负数 的数目。</p>\n<p>示例 1：<br><code>输入：grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]    输出：8   解释：矩阵中共有 8 个负数。</code><br>示例 2：<br><code>输入：grid = [[3,2],[1,0]]   输出：0  </code><br>示例 3：<br><code>输入：grid = [[1,-1],[-1,-1]]   输出：3</code><br>示例 4：<br><code>输入：grid = [[-1]]   输出：1</code><br>提示：</p>\n<p>m == grid.length<br>n == grid[i].length<br>1 &lt;= m, n &lt;= 100<br>-100 &lt;= grid[i][j] &lt;= 100  </p>\n<h4 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h4><p>没啥好说的二分查找，对每一个二维数组中的每一行进行一个二分，一个for循环就够了，用来遍历每一行。这里注意越界的问题，因为是数组，在while中要加入一个边界的判断，内部两个if即可，大于等于0在一起。主要是最后的sum，注意减去的是left的值，因为left在最后一轮的判断中会移动到最先出现的那个负数那里，然而right判断是负数后会继续向左移动（因为此时不知道当前负数是不是最早的负数，同样left判断的是非零数，其无法识别是不是最后一个非零数，当判断是非零数向后移动一个且left大于right时此时找到了第一个负数），因此使用grid&#x5B;i&#x5D;.length-left。全部循环完毕后得到最后的sum值。二分就是细节怪~~~~</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">countNegatives</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] grid)</span> </span>&#123;</span><br><span class=\"line\">        \t\t<span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; grid.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        \t<span class=\"keyword\">int</span> left,mid,right;</span><br><span class=\"line\">        \tleft=<span class=\"number\">0</span>;</span><br><span class=\"line\">        \tright=grid[i].length-<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tmid=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(right&gt;=left&amp;&amp;left&lt;=grid[i].length&amp;&amp;right&gt;=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tmid=left+(right-left)/<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(grid[i][mid]&gt;=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tleft=mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tright=mid-<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tsum+=grid[i].length-left;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["LeetCode"],"tags":["LeetCode"]},{"title":"441.排硬币","url":"/posts/1209064847/","content":"<h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p><a href=\"https://leetcode-cn.com/problems/arranging-coins/\">传送门</a><br>你总共有 n 枚硬币，你需要将它们摆成一个阶梯形状，第 k 行就必须正好有 k 枚硬币。<br>给定一个数字 n，找出可形成完整阶梯行的总行数。<br>n 是一个非负整数，并且在32位有符号整型的范围内。</p>\n<p>示例 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">n = 5</span><br><span class=\"line\"></span><br><span class=\"line\">硬币可排列成以下几行:</span><br><span class=\"line\">¤  </span><br><span class=\"line\">¤ ¤  </span><br><span class=\"line\">¤ ¤  </span><br><span class=\"line\"></span><br><span class=\"line\">因为第三行不完整，所以返回2.</span><br></pre></td></tr></table></figure>\n<p>示例 2:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">n = 8</span><br><span class=\"line\"></span><br><span class=\"line\">硬币可排列成以下几行:</span><br><span class=\"line\">¤</span><br><span class=\"line\">¤ ¤</span><br><span class=\"line\">¤ ¤ ¤</span><br><span class=\"line\">¤ ¤</span><br><span class=\"line\"></span><br><span class=\"line\">因为第四行不完整，所以返回3.</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h4><p>两个坑吧算是：1.注意题目给定的范围，因为涉及到前n项求和，所以在极限测试的时候会超出限制，所以采用long的形式进行定义，后期再进行强转返回。2.当<code>right&gt;=left</code>的条件不满足的时候，退出while循环后返回的是right，而不是mid，因为由大向小缩进，所以right代表的是最后的结果。这两点注意之后就没啥了，常规的二分法。  </p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">arrangeCoins</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> left,mid,right,sum;</span><br><span class=\"line\">        left=<span class=\"number\">1</span>;</span><br><span class=\"line\">        right=n;</span><br><span class=\"line\">        mid=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(right&gt;=left)&#123;</span><br><span class=\"line\">            mid=left+(right-left)/<span class=\"number\">2</span>;</span><br><span class=\"line\">             sum=(<span class=\"number\">1</span>+mid)*mid/<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum&gt;n)&#123;</span><br><span class=\"line\">                right=mid-<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum==n)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)mid;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                left=mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)right;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["LeetCode"],"tags":["LeetCode"]},{"title":"374.猜数字大小","url":"/posts/3692866884/","content":"<h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>猜数字游戏的规则如下：  </p>\n<p>每轮游戏，我都会从 1 到 n 随机选择一个数字。 请你猜选出的是哪个数字。<br>如果你猜错了，我会告诉你，你猜测的数字比我选出的数字是大了还是小了。<br>你可以通过调用一个预先定义好的接口 int guess(int num) 来获取猜测结果，返回值一共有 3 种可能的情况（-1，1 或 0）：  </p>\n<ul>\n<li>-1：我选出的数字比你猜的数字小 pick &lt; num   </li>\n<li>1：我选出的数字比你猜的数字大 pick &gt; num   </li>\n<li>0：我选出的数字和你猜的数字一样。恭喜！你猜对了！pick == num<br>返回我选出的数字。   </li>\n</ul>\n<p><strong>示例 1：</strong><br><code>输入：n = 10, pick = 6    输出：6   </code><br>示例 2 ：<br><code>  输入：n = 1, pick = 1   输出：1 </code><br>示例 3：<br><code>  输入：n = 2, pick = 1      输出：1  </code><br>示例 4：<br><code>输入：n = 2, pick = 2   输出：2  </code>  </p>\n<h4 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h4><p>&emsp;&emsp;传统想法，初始left为0，mid值为pick的值，right为2倍的pick值；pick小于规定值left移到mid，重新计算mid值，反之一样的操作，最后返回mid值，while循环不用啥判断条件，直接<code>while(true)</code>就好，体内有返回语句，注意，这种情况下，while外就不需要再return了，否则会报<code>UNreachable</code>错误，因为压根就执行不到那一步。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * Forward declaration of guess API.</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  num   your guess</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> \t     -1 if num is lower than the guess number</span></span><br><span class=\"line\"><span class=\"comment\"> *\t\t\t      1 if num is higher than the guess number</span></span><br><span class=\"line\"><span class=\"comment\"> *               otherwise return 0</span></span><br><span class=\"line\"><span class=\"comment\"> * int guess(int num);</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> <span class=\"keyword\">extends</span> <span class=\"title\">GuessGame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">guessNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> left,mid,right;</span><br><span class=\"line\">        left=<span class=\"number\">0</span>;</span><br><span class=\"line\">        mid=n;</span><br><span class=\"line\">        right=<span class=\"number\">2</span>*n;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(guess(mid)==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            left=mid;</span><br><span class=\"line\">            mid=left+(right-left)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(guess(mid)==-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            right=mid;</span><br><span class=\"line\">            mid=left+(right-left)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//return mid;</span></span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","tags":["LeetCode"]},{"title":"69.x的平方根","url":"/posts/499504488/","content":"<h4 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h4><h4 id=\"分析加代码1\"><a href=\"#分析加代码1\" class=\"headerlink\" title=\"分析加代码1\"></a>分析加代码1</h4><p>&emsp;&emsp;第一种想法就是传统的二分算法，解题的依据是一个数的平方根一般不超过其<code>1/2</code>即<code>√x&lt;=x/2</code>，但要注意特殊的情况1和0，这种情况单独讨论即可。这里注意<code>mid</code>的求法，如果不加一的话在最后会卡住，其他的没有什么问题了，就是正常的二分，代码如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">    public int mySqrt(int x) &#123;</span><br><span class=\"line\">        if(x==0)</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">        if(x==1)</span><br><span class=\"line\">        return 1;</span><br><span class=\"line\">        int left,right,mid;</span><br><span class=\"line\">        left=1;</span><br><span class=\"line\">        right=x/2;</span><br><span class=\"line\">        </span><br><span class=\"line\">        while(right&gt;left)&#123;</span><br><span class=\"line\">            mid=left+(right-left+1)/2;</span><br><span class=\"line\">            if(mid&gt;x/mid)</span><br><span class=\"line\">                right=mid-1;</span><br><span class=\"line\">            else </span><br><span class=\"line\">                left=mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的<code>if</code>判断中使用的是除法而不是乘法，是为了防止大整数溢出，除法可以有效避免这种情况。</p>\n<h4 id=\"分析加代码2\"><a href=\"#分析加代码2\" class=\"headerlink\" title=\"分析加代码2\"></a>分析加代码2</h4><p>&emsp;&emsp;这是大佬提供的题解，使用牛顿迭代法，不得不说虽然没有学过数分，但是好歹学过一点高数，这一刻被捻的稀碎啊，后面的就是借鉴大佬的分析思路。<br>&emsp;&emsp;下面这种方法可以很有效地求出根号<em><strong>a</strong></em>的近似值：首先随便猜一个近似值<em><strong>x</strong></em>，然后不断令<em><strong>x</strong></em>等于<em><strong>x</strong></em>和<em><strong>a/x</strong></em>的平均数，迭代个六七次后<em><strong>x</strong></em>的值就已经相当精确了。例子如下：<br>例如，我想求根号2等于多少。假如我猜测的结果为4，虽然错的离谱，但你可以看到使用牛顿迭代法后这个值很快就趋近于根号2了：</p>\n<blockquote>\n<p>( 4 + 2/ 4 ) / 2 = 2.25<br>( 2.25 + 2/ 2.25 ) / 2 = 1.56944..<br>( 1.56944..+ 2/1.56944..) / 2 = 1.42189..<br>( 1.42189..+ 2/1.42189..) / 2 = 1.41423..     </p>\n</blockquote>\n<p><img src=\"https://pic.leetcode-cn.com/c142efde7a7261c6c799d3269cee2f921dc5f5144a410b32afce4dbf036d0ed7-image.png\" alt=\"牛顿迭代法\"><br>代码如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">    int s;</span><br><span class=\"line\">    </span><br><span class=\"line\"> public int mySqrt(int x) &#123;</span><br><span class=\"line\">     s=x;</span><br><span class=\"line\">     if(x==0) return 0;</span><br><span class=\"line\">    return ((int)(sqrts(x)));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public double sqrts(double x)&#123;</span><br><span class=\"line\">      double res = (x + s / x) / 2;</span><br><span class=\"line\">    if (res == x) &#123;</span><br><span class=\"line\">      return x;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      return sqrts(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"补充牛顿迭代法（我记得张宇讲过这个也是不断逼近的）\"><a href=\"#补充牛顿迭代法（我记得张宇讲过这个也是不断逼近的）\" class=\"headerlink\" title=\"补充牛顿迭代法（我记得张宇讲过这个也是不断逼近的）\"></a>补充牛顿迭代法（我记得张宇讲过这个也是不断逼近的）</h4><ul>\n<li>切线方程：以P为切点的切线方程：<em><strong>y-f(a)=f’(a)(x-a)</strong></em>  </li>\n<li>牛顿迭代：<br><img src=\"https://img-blog.csdnimg.cn/20210905161450801.jpg\" alt=\"牛顿迭代法原理\">  </li>\n</ul>\n","categories":["LeetCode"],"tags":["LeetCode"]},{"title":"35.搜索插入位置","url":"/posts/3915403668/","content":"<h4 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h4><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。   </p>\n<p>请必须使用时间复杂度为 O(log n) 的算法。  </p>\n<p>示例 1:  </p>\n<p>输入: nums = [1,3,5,6], target = 5<br>输出: 2<br>示例 2:</p>\n<p>输入: nums = [1,3,5,6], target = 2<br>输出: 1<br>示例 3:</p>\n<p>输入: nums = [1,3,5,6], target = 7<br>输出: 4<br>示例 4:</p>\n<p>输入: nums = [1,3,5,6], target = 0<br>输出: 0<br>示例 5:</p>\n<p>输入: nums = [1], target = 0<br>输出: 0\n </p>\n<p>提示:</p>\n<p>1 &lt;= nums.length &lt;= 104<br>-104 &lt;= nums[i] &lt;= 104<br>nums 为无重复元素的升序排列数组<br>-104 &lt;= target &lt;= 104  </p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre><code>class Solution &#123;\n    public int searchInsert(int[] nums, int target) &#123;\n        int left,mid,right;\n        left=0;\n        right=nums.length-1;\n        while(right&gt;=left)&#123;\n            mid=left+(right-left)/2; \n            if(nums[mid]==target)&#123;\n                return mid;\n            &#125;\n            if(nums[mid]&lt;target)&#123;\n                left=mid+1;\n            &#125;\n           \n            if(nums[mid]&gt;target)&#123;\n            right=mid-1;\n            &#125;\n        &#125;\n        return left;\n    &#125;\n&#125;\n</code></pre>\n<p>常规二分，别想太多就好，不要去抽离实现结果。</p>\n","categories":["LeetCode "],"tags":["Leetcode"]},{"title":"287.第一个版本错误","url":"/posts/2485716078/","content":"<h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。</p>\n<p>假设你有 n 个版本 **[1, 2, …, n]**，你想找出导致之后所有版本出错的第一个错误的版本。</p>\n<p>你可以通过调用 <code>bool isBadVersion(version)</code> 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。</p>\n<p> <br><strong>示例 1：</strong><br>输入：n = 5, bad = 4<br>输出：4<br>解释：<br>调用 isBadVersion(3) -&gt; false<br>调用 isBadVersion(5) -&gt; true<br>调用 isBadVersion(4) -&gt; true<br>所以，4 是第一个错误的版本。<br><strong>示例 2：</strong><br>输入：n = 1, bad = 1<br>输出：1<br><strong>提示：</strong><br>1 &lt;= bad &lt;= n &lt;= 231 - 1  </p>\n<h4 id=\"初始想法\"><a href=\"#初始想法\" class=\"headerlink\" title=\"初始想法\"></a>初始想法</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">public class Solution extends VersionControl &#123;</span><br><span class=\"line\">    public int firstBadVersion(int n) &#123;</span><br><span class=\"line\">        int left,mid,right;</span><br><span class=\"line\">        left=1;</span><br><span class=\"line\">        right=n;</span><br><span class=\"line\">        mid=left+(right-left)/2;</span><br><span class=\"line\">        while(right&gt;left)&#123;</span><br><span class=\"line\">            if(isBadVersion(mid))&#123;</span><br><span class=\"line\">                if(!isBadVersion(mid+1))&#123;</span><br><span class=\"line\">                    return mid+1;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                    left=mid+1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else&#123;</span><br><span class=\"line\">            if(isBadVersion(mid-1))&#123;</span><br><span class=\"line\">                return mid;</span><br><span class=\"line\">            &#125;   </span><br><span class=\"line\">                else </span><br><span class=\"line\">                right=mid-1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    return mid;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用的是二分查找的方法，开始的想法是用传统的二分进行解决，但是提示超时，后面又改进一次，当mid本身为false且左侧为true时，则不需要再进行一次标识挪动，直接输出mid即可，反之同理，但是按照题目要求要尽量减少API的使用次数，但是如果按照我这种方法和之前调用API的次数不差多少，所以不出意外的出现了意外，又超时了。  </p>\n<h4 id=\"改进\"><a href=\"#改进\" class=\"headerlink\" title=\"改进\"></a>改进</h4><p>之前出现了一个错误，就是把mid的计算放到了<code>while()</code>之外，导致mid值不变，会调用数组长度的一半次数的API，导致超时，改进后将mid的计算放进循环内就好了。如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">public class Solution extends VersionControl &#123;</span><br><span class=\"line\">    public int firstBadVersion(int n) &#123;</span><br><span class=\"line\">        int left,mid,right;</span><br><span class=\"line\">        left=1;</span><br><span class=\"line\">        right=n;</span><br><span class=\"line\">        while(right&gt;left)&#123;</span><br><span class=\"line\">        mid=left+(right-left)/2;</span><br><span class=\"line\">           </span><br><span class=\"line\">           if(isBadVersion(mid))&#123;</span><br><span class=\"line\">               right=mid;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           else</span><br><span class=\"line\">           left=mid+1;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    return left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就能通过了。。。。</p>\n","categories":["Leetcode"],"tags":["Leetcode"]},{"title":"Git基本操作","url":"/posts/593176571/","content":"<p>Git的工作就是创建和保存你项目的快找及修改后的的快照进行对比。<br>&emsp;&emsp;Git常用的命令有六个<strong>git clone、git push、git add 、git commit、git checkout、git pull</strong><br>  <span id=\"more\"></span><br>&emsp;&emsp;各个命令之间的逻辑如下图<br>  <img src=\"https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg\" title=\"来源于runoob\"><br>  <strong>说明</strong>  </p>\n<ul>\n<li>workspace：工作空间  </li>\n<li>staging are ：暂存区/缓存区  </li>\n<li>local repository：版本库或本地仓库  </li>\n<li>remote repository：远程仓库  <h5 id=\"一般的操作\"><a href=\"#一般的操作\" class=\"headerlink\" title=\"一般的操作\"></a>一般的操作</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git init  </span><br><span class=\"line\">git add .  </span><br><span class=\"line\">git conmmit  </span><br></pre></td></tr></table></figure></li>\n<li> git init - 初始化仓库。</li>\n<li>git add . - 添加文件到暂存区。</li>\n<li>git commit - 将暂存区内容添加到仓库中。  <h4 id=\"创建仓库命令（自建-下载）\"><a href=\"#创建仓库命令（自建-下载）\" class=\"headerlink\" title=\"创建仓库命令（自建||下载）\"></a>创建仓库命令（自建||下载）</h4><table>  \n<tr>\n  <th>命令</th>  \n  <th>说明</th>\n</tr>\n  <tr>\n  <th>git init</th>  \n  <th>初始化仓库（自己创建目录并作为仓库使用）</th>\n</tr>  \n<tr>\n  <th>git clone</th>  \n  <th>拷贝一份远程仓库，下载一个现有的项目</th>\n</tr>\n</table>   </li>\n</ul>\n<h4 id=\"提交与修改\"><a href=\"#提交与修改\" class=\"headerlink\" title=\"提交与修改\"></a>提交与修改</h4><p>下面是有关创建和提交项目的的快照命令。<br> <table><br>  <tr><br>    <th>命令</th><br>    <th>说明</th><br>  </tr><br>    <tr><br>    <th>git add</th><br>    <th>添加文件到仓库</th><br>  </tr><br>  <tr><br>    <th>git status</th><br>    <th>查看仓库当前的状态，显示有变更的文件</th><br> <tr><br>    <th>git diff</th><br>    <th>比较文件的不同，也就是比较暂存区和工作区的差异</th><br>  </tr><br>  <tr><br>    <th>git add</th><br>    <th>添加文件到仓库</th><br>  </tr><br>  <tr><br>    <th>git commit</th><br>    <th>提交缓存区文件到本地仓库</th><br>  </tr><br>  <tr><br>    <th>git reset</th><br>    <th>回退版本</th><br>  </tr><br>  <tr><br>    <th>git rm</th><br>    <th>删除工作区文件（慎用）</th><br>  </tr><br>  <tr><br>    <th>git mv</th><br>    <th>移动或重命名工作区文件（与linux中的操作一直）</th><br>  </tr><br>  </table>      </p>\n<h4 id=\"提交日志\"><a href=\"#提交日志\" class=\"headerlink\" title=\"提交日志\"></a>提交日志</h4> <table>  \n  <tr>\n    <th>命令</th>  \n    <th>说明</th>\n  </tr>\n    <tr>\n    <th>git log</th>  \n    <th>查看历史提交记录</th>\n  </tr>  \n  <tr>\n    <th>git blame &lt;file&gt;</th>  \n    <th>一列表的形式查看指定文件的历史修改记录</th>\n  </tr>\n  </table>   \n  \n<h4 id=\"远程操作\"><a href=\"#远程操作\" class=\"headerlink\" title=\"远程操作\"></a>远程操作</h4>  <table>  \n  <tr>\n    <th>命令</th>  \n    <th>说明</th>\n  </tr>\n    <tr>\n    <th>git remote</th>  \n    <th>远程仓库操作</th>\n  </tr>  \n  <tr>\n    <th>git fetch</th>  \n    <th>从远程获取代码库</th>\n  </tr>  \n    <tr>\n    <th>git pull</th>  \n    <th>从远程仓库拉取（下载）代码并合并</th>\n  </tr>  \n  <tr>\n    <th>git push</th>  \n    <th>上传远程代码并合并</th>\n  </tr>\n  </table>","categories":["Git"],"tags":["GIt"]},{"title":"BUPT开学第一天","url":"/posts/1395521217/","content":"<p>&emsp;&emsp;北邮开学第一天，突然发现自己首先要解决的不是怎样与舍友相处，怎样规划好自己未来三年的人生，首先要解决的是自己的心态问题，宿舍里两个土著，一个是二战的，一个还是百度实习的大佬，从交流中可以看出差别之大，其余的都是双一流学校的学生。看看自己的水平，感觉自己真的不是个啊，不过也没办法，既来之则安之。可能成长就是去面对那些自己不敢面对的东西吧，这3年没有了任何东西的加持，干干自己能走多远吧，希望将自己最脆弱的一面暴露出来并击碎吧!!!peace out~<br>  <div style=\"width:60%;margin:auto\"><img src=\"/posts/1395521217/1.jpg\" class=\"\"></div></p>\n","categories":["感悟","人生"],"tags":["感悟","人生"]},{"title":"Go语言结构","url":"/posts/3078468758/","content":"<h4 id=\"Go-Hello-World-实例\"><a href=\"#Go-Hello-World-实例\" class=\"headerlink\" title=\"Go Hello World 实例\"></a>Go Hello World 实例</h4><p>Go 语言的基础组成有以下几个部分：  </p>\n<ul>\n<li>包声明 </li>\n<li>引入包  </li>\n<li>函数  </li>\n<li>变量  </li>\n<li>语句 &amp; 表达式  </li>\n<li>注释  <span id=\"more\"></span>\n接下来让我们来看下简单的代码，该代码输出了”Hello World!”:  <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">   /* 这是我的第一个简单的程序 */</span><br><span class=\"line\">   fmt.Println(&quot;Hello, World!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol>\n<li><p>第一行代码 package main 定义了包名。你必须在源文件中非注释的第一行指明这个文件属于哪个包，如：package main。package main表示一个可独立执行的程序，每个 Go 应用程序都包含一个名为 main 的包。</p>\n</li>\n<li><p>下一行 import “fmt” 告诉 Go 编译器这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数。</p>\n</li>\n<li><p>下一行 func main() 是程序开始执行的函数。main 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数（如果有 init() 函数则会先执行该函数）。</p>\n</li>\n<li><p>下一行 /<em>…</em>/ 是注释，在程序执行时将被忽略。单行注释是最常见的注释形式，你可以在任何地方使用以 // 开头的单行注释。多行注释也叫块注释，均已以 /* 开头，并以 */ 结尾，且不可以嵌套使用，多行注释一般用于包的文档描述或注释成块的代码片段。</p>\n</li>\n<li><p>下一行 fmt.Println(…) 可以将字符串输出到控制台，并在最后自动增加换行字符 \\n。 使用 fmt.Print(“hello, world\\n”) 可以得到相同的结果。 Print 和 Println 这两个函数也支持使用变量，如：fmt.Println(arr)。如果没有特别指定，它们会以默认的打印格式将变量 arr 输出到控制台。</p>\n</li>\n<li><p>当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如：Group1，那么使用这种形式的标识符的对象就可以被外部包的代码所使用（客户端程序需要先导入这个包），这被称为导出（像面向对象语言中的 public）；标识符如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的（像面向对象语言中的 protected ）。  </p>\n<h4 id=\"执行-Go-程序\"><a href=\"#执行-Go-程序\" class=\"headerlink\" title=\"执行 Go 程序\"></a>执行 Go 程序</h4><p>让我们来看下如何编写 Go 代码并执行它。步骤如下：  </p>\n</li>\n<li><p>打开编辑器如Sublime2，将以上代码添加到编辑器中。</p>\n</li>\n<li><p>将以上代码保存为 hello.go</p>\n</li>\n<li><p>打开命令行，并进入程序文件保存的目录中。</p>\n</li>\n<li><p>输入命令 go run hello.go 并按回车执行代码。</p>\n</li>\n<li><p>如果操作正确你将在屏幕上看到 “Hello World!” 字样的输出。  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ go run hello.go</span><br><span class=\"line\">Hello, World!</span><br></pre></td></tr></table></figure>\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><p>需要注意的是<code>&#123;</code>不能单独放在一行，所以以下代码在运行时会产生错误：   </p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">func main()  </span><br><span class=\"line\">&#123;  // 错误，&#123; 不能在单独的行上</span><br><span class=\"line\">    fmt.Println(&quot;Hello, World!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"PS\"><a href=\"#PS\" class=\"headerlink\" title=\"PS\"></a>PS</h4><p>关于包，根据本地测试得出以下几点： </p>\n<ul>\n<li>文件名与包名没有直接关系，不一定要将文件名与包名定成同一个。  </li>\n<li>文件夹名与包名没有直接关系，并非需要一致。  </li>\n<li>同一个文件夹下的文件只能有一个包名，否则编译报错。<br>文件结构:  </li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Test</span><br><span class=\"line\">--helloworld.go</span><br><span class=\"line\"></span><br><span class=\"line\">myMath</span><br><span class=\"line\">--myMath1.go</span><br><span class=\"line\">--myMath2.go</span><br></pre></td></tr></table></figure>\n<p>测试代码:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// helloworld.go</span><br><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">&quot;fmt&quot;</span><br><span class=\"line\">&quot;./myMath&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main()&#123;</span><br><span class=\"line\">    fmt.Println(&quot;Hello World!&quot;)</span><br><span class=\"line\">    fmt.Println(mathClass.Add(1,1))</span><br><span class=\"line\">    fmt.Println(mathClass.Sub(1,1))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// myMath1.go</span><br><span class=\"line\">package mathClass</span><br><span class=\"line\">func Add(x,y int) int &#123;</span><br><span class=\"line\">    return x + y</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// myMath2.go</span><br><span class=\"line\">package mathClass</span><br><span class=\"line\">func Sub(x,y int) int &#123;</span><br><span class=\"line\">    return x - y</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Go"],"tags":["Go"]},{"title":"Go初识","url":"/posts/956589985/","content":""},{"title":"Next-neat 插件优化提升访问效率","url":"/posts/1376317895/","content":"<p>&emsp;&emsp;对于任何一个网站来说，优化页面的访问速度是必须的，从体验来讲，没人能忍耐加载页面十秒以上或长时间处于空白或加载状态。优化访问速度的方法有很多，今天只介绍傻瓜式的插件安装方法：  </p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><p>&emsp;&emsp;在站点目录下Git bash一下，使用如下命令安装hexo-neat插件：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"主配置-config-yml文末添加：（其中exclude板块是特别添加，针对你的静态资源进行筛选）\"><a href=\"#主配置-config-yml文末添加：（其中exclude板块是特别添加，针对你的静态资源进行筛选）\" class=\"headerlink\" title=\"主配置_config.yml文末添加：（其中exclude板块是特别添加，针对你的静态资源进行筛选）\"></a>主配置_config.yml文末添加：（其中exclude板块是特别添加，针对你的静态资源进行筛选）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># hexo-neat</span><br><span class=\"line\"># md博文压缩</span><br><span class=\"line\">neat_enable: true</span><br><span class=\"line\"># 压缩html（ejs，swig等也属于html格式片段）</span><br><span class=\"line\">neat_html:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\"># 压缩css  </span><br><span class=\"line\">neat_css:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#x27;*.min.css&#x27;</span><br><span class=\"line\">    - &#x27;**/*.min.css&#x27;</span><br><span class=\"line\">    - &#x27;jquery.fancybox.min.css&#x27;</span><br><span class=\"line\">    - &#x27;**/live2d-widget/waifu.css&#x27;</span><br><span class=\"line\"># 压缩js</span><br><span class=\"line\">neat_js:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mangle: true #打印日志</span><br><span class=\"line\">  output:</span><br><span class=\"line\">  compress:</span><br><span class=\"line\">  exclude: #排除文件</span><br><span class=\"line\">    - &#x27;*.min.js&#x27;</span><br><span class=\"line\">    - &#x27;**/*.min.js&#x27;</span><br><span class=\"line\">    - &#x27;jquery.fancybox.min.js&#x27;</span><br><span class=\"line\">    - &#x27;**/live2d-widget/*.js&#x27;</span><br><span class=\"line\">    - &#x27;**/live2d-widget/*.min.js&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"运行（因为mangle-true-打印日志-我们能看到运行流程）\"><a href=\"#运行（因为mangle-true-打印日志-我们能看到运行流程）\" class=\"headerlink\" title=\"运行（因为mangle: true #打印日志,我们能看到运行流程）\"></a>运行（因为mangle: true #打印日志,我们能看到运行流程）</h4><h5 id=\"【INFO-neat-the-html-xxxx-md】先压缩md文件的换行和空白\"><a href=\"#【INFO-neat-the-html-xxxx-md】先压缩md文件的换行和空白\" class=\"headerlink\" title=\"【INFO neat the html:xxxx.md】先压缩md文件的换行和空白\"></a>【INFO neat the html:xxxx.md】先压缩md文件的换行和空白</h5><h5 id=\"【INFO-neat-the-html-xxxx-ejs】压缩ejs配置文件（这里也有很多换行和空格），这是html片段格式文件。\"><a href=\"#【INFO-neat-the-html-xxxx-ejs】压缩ejs配置文件（这里也有很多换行和空格），这是html片段格式文件。\" class=\"headerlink\" title=\"【INFO neat the html: xxxx.ejs】压缩ejs配置文件（这里也有很多换行和空格），这是html片段格式文件。\"></a>【INFO neat the html: xxxx.ejs】压缩ejs配置文件（这里也有很多换行和空格），这是html片段格式文件。</h5><h5 id=\"现在是neat工作最重要的部分之一：压缩js和css。\"><a href=\"#现在是neat工作最重要的部分之一：压缩js和css。\" class=\"headerlink\" title=\"现在是neat工作最重要的部分之一：压缩js和css。\"></a>现在是neat工作最重要的部分之一：压缩js和css。</h5><h5 id=\"最后是（hexo-generate）将md文章转换成html语言格式的过程。\"><a href=\"#最后是（hexo-generate）将md文章转换成html语言格式的过程。\" class=\"headerlink\" title=\"最后是（hexo generate）将md文章转换成html语言格式的过程。\"></a>最后是（hexo generate）将md文章转换成html语言格式的过程。</h5><div style=\"width:50%;margin:auto\"><img src=\"/posts/1376317895/1.png\" class=\"\"></div>  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/1376317895/3.png\" class=\"\"></div>    \n\n<h4 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h4><div style=\"width:50%;margin:auto\"><img src=\"/posts/1376317895/2.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"Next 7.0 添加文章置顶","url":"/posts/1089908893/","content":"<p>&emsp;&emsp;为了更好的表达人生情感，每个人的博客都会有个指定，Next 7.0的博客置顶操作如下：  </p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><p>&emsp;&emsp;在根目录Blog打开Git Bash，执行下面的命令：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save  </span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"设置指定标志\"><a href=\"#设置指定标志\" class=\"headerlink\" title=\"设置指定标志\"></a>设置指定标志</h4><p>&emsp;&emsp;打开<code>blog/themes/hexo-theme-next/layout/_macro</code>目录下的post.swig文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，插入如下代码：   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% if post.top %&#125;</span><br><span class=\"line\">\t&lt;script type=&quot;text/html&quot; style=&#x27;display:block&#x27;&gt;</span><br><span class=\"line\">    &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;font color=&quot;RED&quot;&gt;置顶&lt;/font&gt;</span><br><span class=\"line\">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;  </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在文章中添加top\"><a href=\"#在文章中添加top\" class=\"headerlink\" title=\"在文章中添加top\"></a>在文章中添加top</h4><p>&emsp;&emsp;然后在需要置顶的文章的Front-matter中加上<code>top: true</code>即可，如下：   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: 时也，运也，命也</span><br><span class=\"line\">abbrlink: 931683055</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - 感悟</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - 感悟</span><br><span class=\"line\">author: 吕蒙正</span><br><span class=\"line\">top: true</span><br><span class=\"line\">date: 2021-08-24 12:18:00</span><br><span class=\"line\">---  </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h4><div style=\"width:50%;margin:auto\"><img src=\"/posts/1089908893/1.png\" class=\"\"></div>  \n\n\n<h4 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h4><div style=\"width:50%;margin:auto\"><img src=\"/posts/1089908893/2.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"DVWA配置下PHPStudy里MySQL无法正常开启","url":"/posts/2706012783/","content":"<p>在配置PHPStudy中部分人会出现MySQL无法开启的情况，一般来说是与本地的MySQL服务冲突了，所以解决方案就是关掉本地的MySQL服务。  </p>\n<span id=\"more\"></span>\n\n<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><p>此电脑-&gt;管理-&gt;服务，之后会出现以下界面</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201109155242164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>选择其中的MySQL80（有的人可能是MySQLa或者其他，大家记得看一下），然后右键属性-&gt;停止</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201109155736933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>在这里建议大家设置为手动开启，避免每次重启后还要进行调整，右键属性-&gt;启动类型-&gt;手动</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201109155713854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>设置完之后重启一下PHPStudy试一下MySQL是否可以正常打开</p>\n","categories":["安全"],"tags":["安全","工具"]},{"title":"kali下破解BurpSuite-血与泪的痛苦","url":"/posts/857850665/","content":"<h2 id=\"工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。\"><a href=\"#工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。\" class=\"headerlink\" title=\"工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。\"></a>工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。</h2><p>因为github上破解类的文章会被河蟹，所以就放在这里吧。<br> <span id=\"more\"></span></p>\n<h2 id=\"一、修改kali下高版本JDK\"><a href=\"#一、修改kali下高版本JDK\" class=\"headerlink\" title=\"一、修改kali下高版本JDK\"></a>一、修改kali下高版本JDK</h2><h3 id=\"（1）准备工作\"><a href=\"#（1）准备工作\" class=\"headerlink\" title=\"（1）准备工作\"></a>（1）准备工作</h3><pre><code>    1）kali系统\n\n    2）JDK：这里推荐1.8版本的JDK，如果你懒得这，可以[点这里](https://pan.baidu.com/s/1J0iYcZnXwdK6XR-MaCG9-g)下载（失效的话直接评论区要就行），提取码：ejos。\n</code></pre>\n<h3 id=\"（2）安装并调整JDK\"><a href=\"#（2）安装并调整JDK\" class=\"headerlink\" title=\"（2）安装并调整JDK\"></a>（2）安装并调整JDK</h3><pre><code>    1)首先创建文件夹package（可以自定义创建位置和名称）\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709114756560.png\"></p>\n<pre><code>mkdir package\n\n    2)将之前下载好的1.8版本的JDK压缩包放到package文件夹中，然后进行解压缩\n\ntar -zxvf jdk-8u161-linux-x64.tar.gz \n\n\n    ![](https://img-blog.csdnimg.cn/20210709115705908.png)![](https://img-blog.csdnimg.cn/20210709115715789.png)\n\n     到这一步一般没啥问题\n</code></pre>\n<p>3)配置环境变量</p>\n<pre><code>    输入下面命令配置环境变量（一般不需要改动）       \n\nexport JAVA_HOME=/package/jdk1.7.0_80\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n\n    这三条命令可以直接在你当前环境下执行（注意分条执行），没有内容回显。\n</code></pre>\n<p>4）给JDK1.8设置序列号（以我个人为例）</p>\n<pre><code>    输入下面命令来设置序列号（如果你不是管理员用户，在命令之前加上sudo获取root权限）\n\nupdate-alternatives  --install  /usr/bin/java  java  /root/package/jdk1.8.0_161/bin/java 1071\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709130121889.png\"></p>\n<pre><code>     注意一下，最后的路径一定要指向一个可执行的名字叫java的脚本，比如上面的：/root/package/jdk1.8.0_161/bin/java\n\n    给某版本软件设置序列号时，install选项的参数是这样的：\n\n--install link name path priority\n</code></pre>\n<p>拓展一下有关uplate-alternatives：</p>\n<pre><code>    增加：$sudo update-alternatives --install 程序生成的快捷方式的目标完整位置 **程序名** 程序其中一个版本的完整路径\n\n    配置：$sudo update-alternatives --config 程序名（如java）\n\n    删除：$sudo update-alternatives  --remove 程序名 其中不要版本的完整路径\n</code></pre>\n<p>例子如下：</p>\n<pre><code>$sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-7-openjdk-i386/bin/java 1071\n\n$sudo update-alternatives --config java\n\n$sudo update-alternatives --remove java /usr/lib/jvm/java-7-openjdk-i386/jre/bin/java\n</code></pre>\n<p>5）设置需要的JDK版本</p>\n<pre><code>    输入以下命令：\n\nupdate-alternatives  --config  java\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709131002857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<pre><code>     选择想要设置的JDK版本对应的编号，回车就好。\n</code></pre>\n<p>6）查看JDK版本</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709131221514.png\"><img src=\"https://img-blog.csdnimg.cn/20210709131226782.png\"></p>\n<p> 至此，JDK设置完成。</p>\n<h2 id=\"二、Burpsuite注册机设置\"><a href=\"#二、Burpsuite注册机设置\" class=\"headerlink\" title=\"二、Burpsuite注册机设置\"></a>二、Burpsuite注册机设置</h2><p> 这里用的是大佬资源，先膜拜一下。</p>\n<h3 id=\"（1）准备工作-1\"><a href=\"#（1）准备工作-1\" class=\"headerlink\" title=\"（1）准备工作\"></a>（1）准备工作</h3><p>下载注册机，需要的，直接<a href=\"https://pan.baidu.com/s/1thBdEmjAFBGwXIJK_kB7mg\">点这里</a>，失效评论区说声哈~</p>\n<pre><code>    1）创建一个burpsuit文件夹（位置和名字可以自定义，一般默认家目录就行），把压缩包放进文件夹中，并进行解压缩。和上面一样不再赘述。\n</code></pre>\n<p>注意：</p>\n<pre><code> （a）文件下载之后检查MD5值，防止被篡改，验证方法：使用命令 md5sum 文件名\n\n hash值：\n\n    Burp_Suite_Pro_v1.7.32_Loader_Keygen\\Burp_Suite_Pro_v1.7.32_Loader_Keygen\\burp-loader-keygen.jar\n    Size: 65220 bytes\n    Modified: 2018年1月25日, 17:01:33\n    MD5: A4A02E374695234412E2C66B0649B757\n    SHA1: 63EF57AA0FD7FDB6F6D2171CF946177C9C23B195\n    CRC32: 4F363E7B\n\n    Burp_Suite_Pro_v1.7.32_Loader_Keygen\\Burp_Suite_Pro_v1.7.32_Loader_Keygen\\burpsuite_pro_v1.7.32.jar\n    Size: 27955758 bytes\n    Modified: 2018年2月3日, 10:02:08\n    MD5: D4D43E44769B121CFD930A13A2B06B4C\n    SHA1: C6CD0BBE402B75F4806D76A04D251474308415B8\n    CRC32: 0FD2072A\n\n\n    (b)解压密码（密码也就是大佬的博客首页地址，没事可以去看看）：[mrxn.net](https://mrxn.net/)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709132131358.png\"></p>\n<p>（蓝色的是解压之后的，红色的是压缩包）</p>\n<pre><code>    2）打开解压后的文件夹，一路点进去，知道找到如下图的位置（也就是最后了）\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/2021070913264244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<pre><code>    3）注册机破解\n</code></pre>\n<p>使用以下命令运行jar包：</p>\n<pre><code>java -jar burp-loader-keygen.jar\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709133710466.png\"></p>\n<p> 运行后会打开注册机如下图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709133835669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p> 这里License Text 的内容随便填写，然后又点击run，会弹出一个窗口，提示你输入Enter license key，这时将上图中的License中的内容复制下来填进去</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134228718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p> 输入之后进行下一步，再弹出一个之后，点击manual activation（手动激活）（借鉴大佬的图）：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134607910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>接下来将request 粘贴到activation request ，将自动生成response，再粘贴到burp里最下面的response中，点击next下一步即可：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134729841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>激活成功：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134803240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"><img src=\"https://img-blog.csdnimg.cn/20210709134809840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<h2 id=\"至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了-，有问题还请多多指教了\"><a href=\"#至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了-，有问题还请多多指教了\" class=\"headerlink\" title=\"至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了 ，有问题还请多多指教了~~\"></a>至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了 ，有问题还请多多指教了~~</h2><p>附上参考博客，大家感兴趣可以看一下：</p>\n<p><a href=\"https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments\">https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments</a></p>\n<p><a href=\"https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments\">https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments</a></p>\n<p> <a href=\"https://www.cnblogs.com/sjjg/p/6033161.html\">https://www.cnblogs.com/sjjg/p/6033161.html</a>  </p>\n<h4 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h4> <div style=\"width:60%;margin:auto\"><img src=\"/posts/857850665/1.jpg\" class=\"\"></div>","categories":["安全"],"tags":["安全"]},{"title":"Next 7.0 修改代码复制功能","url":"/posts/3140811385/","content":"<p>&emsp;&emsp;之前在网上一直找怎样修改代码背景和添加复制功能，结果全部都是Next 5.0版本的，配置起来比较麻烦，而且一直不成功，不过架不住人家配出来的好看，最后发现Next 6.3版本及以上版本已经内置了代码复制功能，直接修改就可。  </p>\n<span id=\"more\"></span>  \n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>&emsp;&emsp;修改主题下的配置文件<code>_config.yml</code>：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/3140811385/1.png\" class=\"\"></div>  \n\n<h4 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">codeblock:</span><br><span class=\"line\">  # Code Highlight theme</span><br><span class=\"line\">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class=\"line\">  # See: https://github.com/chriskempson/tomorrow-theme</span><br><span class=\"line\">  highlight_theme: night</span><br><span class=\"line\">  # Add copy button on codeblock</span><br><span class=\"line\">  copy_button:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    # Show text copy result.</span><br><span class=\"line\">    show_result: true</span><br><span class=\"line\">    # Available values: default | flat | mac</span><br><span class=\"line\">    style: mac  </span><br></pre></td></tr></table></figure>\n<h4 id=\"每篇一图\"><a href=\"#每篇一图\" class=\"headerlink\" title=\"每篇一图\"></a>每篇一图</h4><div style=\"width:60%;margin:auto\"><img src=\"/posts/3140811385/2.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"安装Hexo后台管理系统","url":"/posts/2214244853/","content":"<p>&emsp;&emsp;由于使用Hexo搭建，不使用后台管理的时候，很难像WordPress和typecho那样直接写博文，而是要通过<code>hexo new &#39;文章名&#39;</code>来实现，很明显，这样编写博文十分耗时而且非常不方便，有了后台管理系统之后，可以使用一种可视化的方法编写md文件，设置标签和分类也是非常方便，下面开始介绍配置方式：  </p>\n<span id=\"more\"></span>  \n<h3 id=\"安装Hexo-admin\"><a href=\"#安装Hexo-admin\" class=\"headerlink\" title=\"安装Hexo-admin\"></a>安装Hexo-admin</h3><p>&emsp;&emsp;可以直接查看其<a href=\"https://github.com/jaredly/hexo-admin\">Github项目</a>  </p>\n<p>&emsp;&emsp;进入<code>/hexo</code>目录(hexo根目录)，使用命令<code>npm install --save hexo-admin</code>安装hexo-admin。  </p>\n<h3 id=\"运行Hexo-admin\"><a href=\"#运行Hexo-admin\" class=\"headerlink\" title=\"运行Hexo-admin\"></a>运行Hexo-admin</h3><p>&emsp;&emsp;安装完毕后运行<code>hexo s</code>。出现下面运行结果：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/1.png\" class=\"\"></div>  \n&emsp;&emsp;根据运行结果，在浏览器地址栏中输入`http://localhost:4000/admin`进入后台管理界面,如下图所示：  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/2.png\" class=\"\"></div>  \n\n<h3 id=\"配置安全认证\"><a href=\"#配置安全认证\" class=\"headerlink\" title=\"配置安全认证\"></a>配置安全认证</h3><p>&emsp;&emsp;为了保证安全，在进入后台时要进行身份验证（总不能光着吧），增加一层账户密码的逻辑校验，流程如下：  </p>\n<h4 id=\"1-配置验证用的账户和密码\"><a href=\"#1-配置验证用的账户和密码\" class=\"headerlink\" title=\"1.配置验证用的账户和密码\"></a>1.配置验证用的账户和密码</h4><p>&emsp;&emsp;首先得到你的<code>password_hash</code>，首先点击<code>Setting</code>-&gt;<code>Setup authentification</code>,如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/3.png\" class=\"\"></div>  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/4.png\" class=\"\"></div>  \n&emsp;&emsp;进入之后设置你的相关信息，如下图所示：  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/5.png\" class=\"\"></div> \n\n<h4 id=\"2-修改站点配置文件-config-yml\"><a href=\"#2-修改站点配置文件-config-yml\" class=\"headerlink\" title=\"2.修改站点配置文件_config.yml\"></a>2.修改站点配置文件_config.yml</h4><p>&emsp;&emsp;在完成上述步骤后，在最下面会生成一段代码，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/6.png\" class=\"\"></div>  \n复制上图的代码，打开站点配置文件`_config.yml`，在最后添加如下代码(注意缩进吧，骚年)，保存即可： \n\n<pre><code>admin:\n  username: username\n  password_hash: $2a$10$L.XAIqIWgTc5S1zpvV3MEu7/rH34p4Is/nq824smv8EZ3lIPCp1su\n  secret: my super secret phrase  \n</code></pre>\n<h4 id=\"3-效果图\"><a href=\"#3-效果图\" class=\"headerlink\" title=\"3.效果图\"></a>3.效果图</h4><p>&emsp;&emsp;最后的效果如下所示（再登录需要账号密码认证了）：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/8.png\" class=\"\"></div>    \n\n<h3 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h3><div style=\"width:60%;margin:auto\"><img src=\"/posts/2214244853/7.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"Next 7.0 图片点击放大","url":"/posts/779553087/","content":"<p>&emsp;&emsp;FancyBox 是基于 JQuery 开发的类 Lightbox 插件，可以将图片放大查看，同时支持对放大的图片添加阴影效果，并对于一组相关的图片添加导航操作按纽。对于 Next 7.0+ 主题来说，当文章出现图片时，无法将图片放大查看，为此其内置了 FancyBox3，关于该插件的具体介绍见其<a href=\"https://github.com/theme-next/theme-next-fancybox3\">Github项目</a>   </p>\n<span id=\"more\"></span>  \n\n<h3 id=\"安装并导入\"><a href=\"#安装并导入\" class=\"headerlink\" title=\"安装并导入\"></a>安装并导入</h3><p>&emsp;&emsp;由于安装基于JQuery框架，所以要想正常使用，首先安装并导入JQuery（同时可以解决Next 7.0中导入一些第三方插件时出现的<code>$</code>未定义错误）。解决方法为，打开<code>themes/hexo-theme-next/layout/_partials/head</code> 文件夹中的 <code>head.swig</code>文件，在其中添加如下代码(直接添加到最后空白处就得)：<br>‘’’JavaScript  </p>\n<!-- 导入jquery -->\n<script src=\"https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js\"></script>\n<p>‘’’</p>\n<h3 id=\"修改主题配置文件-config-yml\"><a href=\"#修改主题配置文件-config-yml\" class=\"headerlink\" title=\"修改主题配置文件_config.yml\"></a>修改主题配置文件_config.yml</h3><p>&emsp;&emsp;找到主题配置文件中的<code>fancybox</code>字段，将<code>false</code>修改为<code>true</code>，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/779553087/1.png\" class=\"\"></div>  \n\n<h3 id=\"安装fancybox插件\"><a href=\"#安装fancybox插件\" class=\"headerlink\" title=\"安装fancybox插件\"></a>安装fancybox插件</h3><p>&emsp;&emsp;进入到 <code>hexo-theme-next/next/</code>文件夹下，运行 Git Bash，执行以下代码:<br>‘’’JavaScript<br>git clone <a href=\"https://github.com/theme-next/theme-next-fancybox3.git\">https://github.com/theme-next/theme-next-fancybox3.git</a> source/lib/fancy  </p>\n<p>‘’’</p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>&emsp;&emsp;安装后就可以发现你文章中的图片可以点击放大了，如下图，可点击放大  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/779553087/2.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"Next 7.0+ 球型标签云","url":"/posts/2565730293/","content":"<p>&emsp;&emsp;使用<code>tagcanvas.js</code>插件对样式进行修改实现球型标签云，修改步骤如下  </p>\n<h3 id=\"下载插件\"><a href=\"#下载插件\" class=\"headerlink\" title=\"下载插件\"></a>下载插件</h3><p>&emsp;&emsp;<a href=\"https://www.goat1000.com/tagcanvas.php#links\">点击这里</a>查看并下载插件，下载时右键下载链接，选择从链接另存文件为，保存<code>tagcanvas.js</code>文件，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/1.png\" class=\"\"></div>  \n&emsp;&emsp;将该插件下载后，放入 `hexo/themes/hexo-theme-next/source/js` 目录下。 \n<span id=\"more\"></span>\n\n<h3 id=\"新建标签云swig文件\"><a href=\"#新建标签云swig文件\" class=\"headerlink\" title=\"新建标签云swig文件\"></a>新建标签云swig文件</h3><p>&emsp;&emsp;在<code>/hexo/themes/hexo-theme-next/layout/_partials</code>目录下新建一个<code>tagcanvas.swig</code>的文件，并添加如下代码：  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;tags&quot;</span> id=<span class=\"string\">&quot;myTags&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;my3DTags&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Anything in here will be replaced on browsers that support the canvas element<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tags&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;tags&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &#123;&#123; tagcloud(&#123;</span></span><br><span class=\"line\"><span class=\"xml\">        min_font   : theme.tagcloud.min,</span></span><br><span class=\"line\"><span class=\"xml\">        max_font   : theme.tagcloud.max,</span></span><br><span class=\"line\"><span class=\"xml\">        amount     : theme.tagcloud.amount,</span></span><br><span class=\"line\"><span class=\"xml\">        color      : true,</span></span><br><span class=\"line\"><span class=\"xml\">        start_color: theme.tagcloud.start,</span></span><br><span class=\"line\"><span class=\"xml\">        end_color  : theme.tagcloud.end&#125;)</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/tagcanvas.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> &gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"keyword\">try</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      TagCanvas.Start(<span class=\"string\">&#x27;my3DTags&#x27;</span>,<span class=\"string\">&#x27;tags&#x27;</span>,&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">textFont</span>: <span class=\"string\">&#x27;Georgia,Optima&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">textColour</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">outlineColour</span>: <span class=\"string\">&#x27;black&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">weight</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">reverse</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">depth</span>: <span class=\"number\">0.8</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">maxSpeed</span>: <span class=\"number\">0.05</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">bgRadius</span>: <span class=\"number\">1</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">freezeDecel</span>: <span class=\"literal\">true</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125; <span class=\"keyword\">catch</span>(e) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;myTags&#x27;</span>).style.display = <span class=\"string\">&#x27;none&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"修改page-swig\"><a href=\"#修改page-swig\" class=\"headerlink\" title=\"修改page.swig\"></a>修改page.swig</h3><p>&emsp;&emsp;对 <code>themes/hexo-theme-next/layout/</code> 中的<code> page.swig</code> 文件进行修改,删除下图中标注位置的代码：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/2.png\" class=\"\"></div>  \n&emsp;&emsp;在被删除位置添加以下代码:  \n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;# tagcanvas plugin 球型云标签 #&#125;</span><br><span class=\"line\">&#123;% include &#x27;_partials/tagcanvas.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改-config-yml文件\"><a href=\"#修改-config-yml文件\" class=\"headerlink\" title=\"修改_config.yml文件\"></a>修改_config.yml文件</h3><p>&emsp;&emsp;打开主题下的配置文件，修改<code>tagcloud</code>字段，根据实际需求进行修改。  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 标签云设置页面</span><br><span class=\"line\">tagcloud:</span><br><span class=\"line\">    min: 12 # 最小字体尺寸，以px为单位</span><br><span class=\"line\">    max: 30 # 最大字体尺寸，以px为单位</span><br><span class=\"line\">    start: &quot;#ccc&quot; # 开始颜色 (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">    end: &quot;#111&quot; # 结束颜色 (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">    amount: 200 # 标签数量，当大于200个后，请进行更改  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"效果图（目前标签较少，多了就好看了）\"><a href=\"#效果图（目前标签较少，多了就好看了）\" class=\"headerlink\" title=\"效果图（目前标签较少，多了就好看了）\"></a>效果图（目前标签较少，多了就好看了）</h3><div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/3.png\" class=\"\"></div>  \n###  参考  \n&emsp;&emsp;参考段大佬的文章，<a href=\"https://alex-mcavoy.github.io/hexo/7be258c0.html\">点击这里访问大佬文章</a>","categories":["Hexo"],"tags":["Hexo","Daily"]},{"title":"智能合约与solidity","url":"/posts/3709194251/","content":"<h2 id=\"以太坊\"><a href=\"#以太坊\" class=\"headerlink\" title=\"以太坊\"></a>以太坊</h2><p>  &emsp;&emsp;以太坊（英语：Ethereum）是一个开源的有智能合约功能的公共区块链平台。通过其专用加密货币以太币（Ether，又称“以太坊”）提供去中心化的虚拟机（称为“以太虚拟机”Ethereum Virtual Machine）来处理点对点合约。 以太坊的概念首次在2013至2014年间由程序员维塔利克·布特林受比特币启发后提出，大意为“下一代加密货币与去中心化应用平台”，在2014年透过ICO众筹得以开始发展。 截至2018年6月，以太币是市值第二高的加密货币，以太坊亦被称为“第二代的区块链平台”，仅次于比特币。  </p>\n<span id=\"more\"></span>\n<h2 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h2><p>  &emsp;&emsp;智能合约（英语：Smart contract）是一种特殊协议，在区块链内制定合约时使用，当中内含了代码函数 (Function)，亦能与其他合约进行交互、做决策、存储资料及发送以太币等功能。智能合约主力提供验证及运行合约内所订立的条件。智能合约允许在没有第三方的情况下进行可信交易。这些交易可追踪且不可逆转。智能合约概念于1994年由一名身兼计算机科学家及密码学专家的学者尼克·萨博首次提出。智能合同的目的是提供优于传统合同方法的安全，并减少与合同相关的其他交易成本。</p>\n<h2 id=\"solidity\"><a href=\"#solidity\" class=\"headerlink\" title=\"solidity\"></a>solidity</h2><p>  &emsp;&emsp;Solidity是一种合约导向式语言，被应用于各种不同的区块链平台，其主要开发者为加文·伍德，Christian Reitwiessner，Alex Beregszaszi，Liana Husikyan，Yoichi Hirai和其他几位早期以太坊核心贡献者。Solidity 可使程序开发人员能在区块链上（例如以太坊）编写智能合约。</p>\n<h3 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h3><p>  &emsp;&emsp;Solidity的语法概念最早是由加文·伍德在2014年提出，后期则以Christian Reitwiessner所领导的以太坊团队Solidity接手开发。该语言是针对以太坊虚拟机（EVM）所设计的四种语言之一（其他的还有Serpent，LLL，Viper（实验中）和Mutan（已弃用））。有关这些语言的更多信息，请参阅以太坊编程语言。 Solidity是目前在以太坊及其他以太坊竞争平台中的主要编程语言，例如Monax及其BurrowHyperledger的区块链就是使用Tendermint完成共识机制。 SWIFT亦已经使用Solidity在Burrow上完成了概念验证。 康奈尔大学的研究人员指出，Solidity即是导致DAO在2016年被黑客攻击的部分原因之一。他表示：“这实际上并不是DAO合同本身的缺陷或漏洞；技术上来说，DAO确实是在EVM上如预期般地被运行，反而是Solidity将安全上的漏洞引入了合约之中，而这些漏洞不仅没被开发社区察觉，Solidity语言的设计者们也忽略了。</p>\n<h3 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h3><p> &emsp;&emsp;Solidity是一种静态类型的编程语言，用于开发在EVM上运行的智能合约。 Solidity被编译为可在EVM上运行的字节码。借由Solidity，开发人员能够编写出可自我运行其欲实现之商业逻辑的应用程序，该程序可被视为一份具权威性且永不可悔改的交易合约。对已具备程序编辑能力的人而言，编写Solidity的难易度就如同编写一般的编程语言。 Gavin Wood最初在规划Solidity语言时引用了ECMAScript的语法概念，使其对现有的Web开发者更容易入门；与ECMAScript不同的地方在于Solidity具有静态类型和0可变返回类型。而与目前其他EVM目标语言（如Serpent和Mutan）相比，其重要的差异在于Solidity具有一组复杂的成员变量使得合约可支持任意层次结构的映射和结构。Solidity也支持继承，包含C3线性化多重继承。 另外还引入了一个应用程序二进制接口（ABI），该接口（ABI）可在单一合同中实现多种类型安全的功能。<br>&emsp;&emsp;以下为使用Solidity编写的程序示例：  </p>\n<pre><code class=\"solidity\">pragma solidity ^0.4.0;\ncontract Helloworld&#123;\n    string  myName= &quot;Helloworld&quot;;\n    function getName()  public view returns(string)&#123;\n        return myName;\n    &#125;\n    function changeName(string _newName) public&#123;\n        myName= _newName;\n    &#125; \n    function pureTest(string _name) pure public returns(string) &#123;\n        return _name;\n    &#125;\n&#125;\n</code></pre>\n<p>&emsp;&emsp;上述主要摘自维基百科，旨在初步了解智能合约的同学有一个初步的认识。</p>\n","categories":["Solidity"],"tags":["Solidity"]},{"title":"你好呀~我的朋友","url":"/posts/3073087415/","content":"<h1 align=\"center\" style=\"font-weight:bold;\">hello world</h1>\n\n<hr>\n<p>​    这是用来测试专栏和标签的内容</p>\n<span id=\"more\"></span>\n\n<p>后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。</p>\n"},{"title":"test","url":"/posts/3632233996/","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">555  </span><br><span class=\"line\">555  </span><br><span class=\"line\">555  </span><br><span class=\"line\">555   </span><br><span class=\"line\">555</span><br><span class=\"line\">555  </span><br><span class=\"line\">555 </span><br><span class=\"line\">5 </span><br><span class=\"line\">5 </span><br><span class=\"line\">5 </span><br><span class=\"line\">5 </span><br><span class=\"line\">5 </span><br><span class=\"line\">5 </span><br><span class=\"line\">5 </span><br><span class=\"line\">55  </span><br><span class=\"line\">55</span><br><span class=\"line\">555555555  </span><br><span class=\"line\">5555555555555</span><br><span class=\"line\">555555555555 </span><br><span class=\"line\">55555555555  </span><br><span class=\"line\">555555555555555 55555555555555 55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555 </span><br><span class=\"line\">5  </span><br><span class=\"line\">5  5</span><br></pre></td></tr></table></figure>"}]