[{"title":"时也，运也，命也","url":"/posts/931683055/","content":"<p>&emsp;&emsp;天有不测风云，人有旦夕祸福。蜈蚣百足，行不及蛇；雄鸡两翼，飞不过鸦。马有千里之程，无骑不能自往；人有冲天之志，非运不能自通。<br>&emsp;&emsp;盖闻：人生在世，富贵不能淫，贫贱不能移。文章盖世，孔子厄于陈邦；武略超群，太公钓于渭水。颜渊命短，殊非凶恶之徒；盗跖年长，岂是善良之辈。尧帝明圣，却生不肖之儿；瞽叟愚顽，反生大孝之子。张良原是布衣，萧何曾为县吏。晏子身无五尺，封作齐国宰相；孔明卧居草庐，能作蜀汉军师。楚霸虽雄，败于乌江自刎；汉王虽弱，竟有万里江山。李广有射虎之威，到老无封；冯唐有乘龙之才，一生不遇。韩信未遇之时，无一日三餐，及至遇行，腰悬三齐玉印，一旦时衰，死于阴人之手。<br>&emsp;&emsp;有先贫而后富，有老壮而少衰。满腹文章，白发竟然不中；才疏学浅，少年及第登科。深院宫娥，运退反为妓妾；风流妓女，时来配作夫人。<br>&emsp;&emsp;青春美女，却招愚蠢之夫；俊秀郎君，反配粗丑之妇。蛟龙未遇，潜水于鱼鳖之间；君子失时，拱手于小人之下。衣服虽破，常存仪礼之容；面带忧愁，每抱怀安之量。时遭不遇，只宜安贫守份；心若不欺，必然扬眉吐气。初贫君子，天然骨骼生成；乍富小人，不脱贫寒肌体。<br>&emsp;&emsp;天不得时，日月无光；地不得时，草木不生；水不得时，风浪不平；人不得时，利运不通。注福注禄，命里已安排定，富贵谁不欲？人若不依根基八字，岂能为卿为相？<br>&emsp;&emsp;余者，居洛阳之时，朝投僧寺，夜宿破窑。布衣不能遮其体，饘粥不能充其饥。上人嫌，下人憎，皆言余之贱也，余曰：非贱也，乃时也，运也，命也。余后登高及第，入中书，官至极品，位列三公，思衣则有绮罗千箱，思食则有百味珍馐，有挞百僚之杖，有斩佞臣之剑，出则壮士执鞭，入则佳人扶袂，廪有余粟，库有余财，人皆言余之贵也，余曰：非贵也，乃时也，运也，命也。<br>&emsp;&emsp;嗟呼！人生在世，富贵不可尽用，贫贱不可自欺，听由天地循环，周而复始焉。  \n          </p>\n","categories":["感悟"],"tags":["感悟"]},{"title":"Next 7.0鼠标点击特效","url":"/posts/2197614367/","content":""},{"title":"Next 7.0自定义回到顶部","url":"/posts/3099324006/","content":""},{"title":"Next 7.0 添加文章置顶","url":"/posts/1089908893/","content":"<p>&emsp;&emsp;为了更好的表达人生情感，每个人的博客都会有个指定，Next 7.0的博客置顶操作如下：  </p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><p>&emsp;&emsp;在根目录Blog打开Git Bash，执行下面的命令：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save  </span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"设置指定标志\"><a href=\"#设置指定标志\" class=\"headerlink\" title=\"设置指定标志\"></a>设置指定标志</h4><p>&emsp;&emsp;打开<code>blog/themes/hexo-theme-next/layout/_macro</code>目录下的post.swig文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，插入如下代码：   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% if post.top %&#125;</span><br><span class=\"line\">\t&lt;script type=&quot;text/html&quot; style=&#x27;display:block&#x27;&gt;</span><br><span class=\"line\">    &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;font color=&quot;RED&quot;&gt;置顶&lt;/font&gt;</span><br><span class=\"line\">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;  </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在文章中添加top\"><a href=\"#在文章中添加top\" class=\"headerlink\" title=\"在文章中添加top\"></a>在文章中添加top</h4><p>&emsp;&emsp;然后在需要置顶的文章的Front-matter中加上<code>top: true</code>即可，如下：   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: 时也，运也，命也</span><br><span class=\"line\">abbrlink: 931683055</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - 感悟</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - 感悟</span><br><span class=\"line\">author: 吕蒙正</span><br><span class=\"line\">top: true</span><br><span class=\"line\">date: 2021-08-24 12:18:00</span><br><span class=\"line\">---  </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h4><div style=\"width:50%;margin:auto\"><img src=\"/posts/1089908893/1.png\" class=\"\"></div>  \n\n\n<h4 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h4><div style=\"width:50%;margin:auto\"><img src=\"/posts/1089908893/2.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"DVWA配置下PHPStudy里MySQL无法正常开启","url":"/posts/2706012783/","content":"<p>在配置PHPStudy中部分人会出现MySQL无法开启的情况，一般来说是与本地的MySQL服务冲突了，所以解决方案就是关掉本地的MySQL服务。  </p>\n<span id=\"more\"></span>\n\n<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><p>此电脑-&gt;管理-&gt;服务，之后会出现以下界面</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201109155242164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>选择其中的MySQL80（有的人可能是MySQLa或者其他，大家记得看一下），然后右键属性-&gt;停止</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201109155736933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>在这里建议大家设置为手动开启，避免每次重启后还要进行调整，右键属性-&gt;启动类型-&gt;手动</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201109155713854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>设置完之后重启一下PHPStudy试一下MySQL是否可以正常打开</p>\n","categories":["安全"],"tags":["安全","工具"]},{"title":"kali下破解BurpSuite-血与泪的痛苦","url":"/posts/857850665/","content":"<h2 id=\"工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。\"><a href=\"#工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。\" class=\"headerlink\" title=\"工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。\"></a>工欲善其事必先利其器，言简意赅，一共就两步：第一步，修改kali下高版本JDK（多环境共存）；第二步，安装破解版注册机。</h2><p>因为github上破解类的文章会被河蟹，所以就放在这里吧。<br> <span id=\"more\"></span></p>\n<h2 id=\"一、修改kali下高版本JDK\"><a href=\"#一、修改kali下高版本JDK\" class=\"headerlink\" title=\"一、修改kali下高版本JDK\"></a>一、修改kali下高版本JDK</h2><h3 id=\"（1）准备工作\"><a href=\"#（1）准备工作\" class=\"headerlink\" title=\"（1）准备工作\"></a>（1）准备工作</h3><pre><code>    1）kali系统\n\n    2）JDK：这里推荐1.8版本的JDK，如果你懒得这，可以[点这里](https://pan.baidu.com/s/1J0iYcZnXwdK6XR-MaCG9-g)下载（失效的话直接评论区要就行），提取码：ejos。\n</code></pre>\n<h3 id=\"（2）安装并调整JDK\"><a href=\"#（2）安装并调整JDK\" class=\"headerlink\" title=\"（2）安装并调整JDK\"></a>（2）安装并调整JDK</h3><pre><code>    1)首先创建文件夹package（可以自定义创建位置和名称）\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709114756560.png\"></p>\n<pre><code>mkdir package\n\n    2)将之前下载好的1.8版本的JDK压缩包放到package文件夹中，然后进行解压缩\n\ntar -zxvf jdk-8u161-linux-x64.tar.gz \n\n\n    ![](https://img-blog.csdnimg.cn/20210709115705908.png)![](https://img-blog.csdnimg.cn/20210709115715789.png)\n\n     到这一步一般没啥问题\n</code></pre>\n<p>3)配置环境变量</p>\n<pre><code>    输入下面命令配置环境变量（一般不需要改动）       \n\nexport JAVA_HOME=/package/jdk1.7.0_80\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n\n    这三条命令可以直接在你当前环境下执行（注意分条执行），没有内容回显。\n</code></pre>\n<p>4）给JDK1.8设置序列号（以我个人为例）</p>\n<pre><code>    输入下面命令来设置序列号（如果你不是管理员用户，在命令之前加上sudo获取root权限）\n\nupdate-alternatives  --install  /usr/bin/java  java  /root/package/jdk1.8.0_161/bin/java 1071\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709130121889.png\"></p>\n<pre><code>     注意一下，最后的路径一定要指向一个可执行的名字叫java的脚本，比如上面的：/root/package/jdk1.8.0_161/bin/java\n\n    给某版本软件设置序列号时，install选项的参数是这样的：\n\n--install link name path priority\n</code></pre>\n<p>拓展一下有关uplate-alternatives：</p>\n<pre><code>    增加：$sudo update-alternatives --install 程序生成的快捷方式的目标完整位置 **程序名** 程序其中一个版本的完整路径\n\n    配置：$sudo update-alternatives --config 程序名（如java）\n\n    删除：$sudo update-alternatives  --remove 程序名 其中不要版本的完整路径\n</code></pre>\n<p>例子如下：</p>\n<pre><code>$sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-7-openjdk-i386/bin/java 1071\n\n$sudo update-alternatives --config java\n\n$sudo update-alternatives --remove java /usr/lib/jvm/java-7-openjdk-i386/jre/bin/java\n</code></pre>\n<p>5）设置需要的JDK版本</p>\n<pre><code>    输入以下命令：\n\nupdate-alternatives  --config  java\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709131002857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<pre><code>     选择想要设置的JDK版本对应的编号，回车就好。\n</code></pre>\n<p>6）查看JDK版本</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709131221514.png\"><img src=\"https://img-blog.csdnimg.cn/20210709131226782.png\"></p>\n<p> 至此，JDK设置完成。</p>\n<h2 id=\"二、Burpsuite注册机设置\"><a href=\"#二、Burpsuite注册机设置\" class=\"headerlink\" title=\"二、Burpsuite注册机设置\"></a>二、Burpsuite注册机设置</h2><p> 这里用的是大佬资源，先膜拜一下。</p>\n<h3 id=\"（1）准备工作-1\"><a href=\"#（1）准备工作-1\" class=\"headerlink\" title=\"（1）准备工作\"></a>（1）准备工作</h3><p>下载注册机，需要的，直接<a href=\"https://pan.baidu.com/s/1thBdEmjAFBGwXIJK_kB7mg\">点这里</a>，失效评论区说声哈~</p>\n<pre><code>    1）创建一个burpsuit文件夹（位置和名字可以自定义，一般默认家目录就行），把压缩包放进文件夹中，并进行解压缩。和上面一样不再赘述。\n</code></pre>\n<p>注意：</p>\n<pre><code> （a）文件下载之后检查MD5值，防止被篡改，验证方法：使用命令 md5sum 文件名\n\n hash值：\n\n    Burp_Suite_Pro_v1.7.32_Loader_Keygen\\Burp_Suite_Pro_v1.7.32_Loader_Keygen\\burp-loader-keygen.jar\n    Size: 65220 bytes\n    Modified: 2018年1月25日, 17:01:33\n    MD5: A4A02E374695234412E2C66B0649B757\n    SHA1: 63EF57AA0FD7FDB6F6D2171CF946177C9C23B195\n    CRC32: 4F363E7B\n\n    Burp_Suite_Pro_v1.7.32_Loader_Keygen\\Burp_Suite_Pro_v1.7.32_Loader_Keygen\\burpsuite_pro_v1.7.32.jar\n    Size: 27955758 bytes\n    Modified: 2018年2月3日, 10:02:08\n    MD5: D4D43E44769B121CFD930A13A2B06B4C\n    SHA1: C6CD0BBE402B75F4806D76A04D251474308415B8\n    CRC32: 0FD2072A\n\n\n    (b)解压密码（密码也就是大佬的博客首页地址，没事可以去看看）：[mrxn.net](https://mrxn.net/)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709132131358.png\"></p>\n<p>（蓝色的是解压之后的，红色的是压缩包）</p>\n<pre><code>    2）打开解压后的文件夹，一路点进去，知道找到如下图的位置（也就是最后了）\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/2021070913264244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<pre><code>    3）注册机破解\n</code></pre>\n<p>使用以下命令运行jar包：</p>\n<pre><code>java -jar burp-loader-keygen.jar\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709133710466.png\"></p>\n<p> 运行后会打开注册机如下图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709133835669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p> 这里License Text 的内容随便填写，然后又点击run，会弹出一个窗口，提示你输入Enter license key，这时将上图中的License中的内容复制下来填进去</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134228718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p> 输入之后进行下一步，再弹出一个之后，点击manual activation（手动激活）（借鉴大佬的图）：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134607910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>接下来将request 粘贴到activation request ，将自动生成response，再粘贴到burp里最下面的response中，点击next下一步即可：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134729841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<p>激活成功：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210709134803240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"><img src=\"https://img-blog.csdnimg.cn/20210709134809840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1MjA3,size_16,color_FFFFFF,t_70\"></p>\n<h2 id=\"至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了-，有问题还请多多指教了\"><a href=\"#至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了-，有问题还请多多指教了\" class=\"headerlink\" title=\"至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了 ，有问题还请多多指教了~~\"></a>至此，所有步骤结束，直接运行kali上的Burpsuite就可以了，大家可以正常使用了 ，有问题还请多多指教了~~</h2><p>附上参考博客，大家感兴趣可以看一下：</p>\n<p><a href=\"https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments\">https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments</a></p>\n<p><a href=\"https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments\">https://mrxn.net/hacktools/Burp_Suite_Pro_v1_7_3_2_Loader_Keygen_Cracked_Share.html/comment-page-2#comments</a></p>\n<p> <a href=\"https://www.cnblogs.com/sjjg/p/6033161.html\">https://www.cnblogs.com/sjjg/p/6033161.html</a>  </p>\n<h4 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h4> <div style=\"width:60%;margin:auto\"><img src=\"/posts/857850665/1.jpg\" class=\"\"></div>","categories":["安全"],"tags":["安全"]},{"title":"Next 7.0 修改代码复制功能","url":"/posts/3140811385/","content":"<p>&emsp;&emsp;之前在网上一直找怎样修改代码背景和添加复制功能，结果全部都是Next 5.0版本的，配置起来比较麻烦，而且一直不成功，不过架不住人家配出来的好看，最后发现Next 6.3版本及以上版本已经内置了代码复制功能，直接修改就可。  </p>\n<span id=\"more\"></span>  \n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>&emsp;&emsp;修改主题下的配置文件<code>_config.yml</code>：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/3140811385/1.png\" class=\"\"></div>  \n\n<h4 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">codeblock:</span><br><span class=\"line\">  # Code Highlight theme</span><br><span class=\"line\">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class=\"line\">  # See: https://github.com/chriskempson/tomorrow-theme</span><br><span class=\"line\">  highlight_theme: night</span><br><span class=\"line\">  # Add copy button on codeblock</span><br><span class=\"line\">  copy_button:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    # Show text copy result.</span><br><span class=\"line\">    show_result: true</span><br><span class=\"line\">    # Available values: default | flat | mac</span><br><span class=\"line\">    style: mac  </span><br></pre></td></tr></table></figure>\n<h4 id=\"每篇一图\"><a href=\"#每篇一图\" class=\"headerlink\" title=\"每篇一图\"></a>每篇一图</h4><div style=\"width:60%;margin:auto\"><img src=\"/posts/3140811385/2.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"安装Hexo后台管理系统","url":"/posts/2214244853/","content":"<p>&emsp;&emsp;由于使用Hexo搭建，不使用后台管理的时候，很难像WordPress和typecho那样直接写博文，而是要通过<code>hexo new &#39;文章名&#39;</code>来实现，很明显，这样编写博文十分耗时而且非常不方便，有了后台管理系统之后，可以使用一种可视化的方法编写md文件，设置标签和分类也是非常方便，下面开始介绍配置方式：  </p>\n<span id=\"more\"></span>  \n<h3 id=\"安装Hexo-admin\"><a href=\"#安装Hexo-admin\" class=\"headerlink\" title=\"安装Hexo-admin\"></a>安装Hexo-admin</h3><p>&emsp;&emsp;可以直接查看其<a href=\"https://github.com/jaredly/hexo-admin\">Github项目</a>  </p>\n<p>&emsp;&emsp;进入<code>/hexo</code>目录(hexo根目录)，使用命令<code>npm install --save hexo-admin</code>安装hexo-admin。  </p>\n<h3 id=\"运行Hexo-admin\"><a href=\"#运行Hexo-admin\" class=\"headerlink\" title=\"运行Hexo-admin\"></a>运行Hexo-admin</h3><p>&emsp;&emsp;安装完毕后运行<code>hexo s</code>。出现下面运行结果：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/1.png\" class=\"\"></div>  \n&emsp;&emsp;根据运行结果，在浏览器地址栏中输入`http://localhost:4000/admin`进入后台管理界面,如下图所示：  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/2.png\" class=\"\"></div>  \n\n<h3 id=\"配置安全认证\"><a href=\"#配置安全认证\" class=\"headerlink\" title=\"配置安全认证\"></a>配置安全认证</h3><p>&emsp;&emsp;为了保证安全，在进入后台时要进行身份验证（总不能光着吧），增加一层账户密码的逻辑校验，流程如下：  </p>\n<h4 id=\"1-配置验证用的账户和密码\"><a href=\"#1-配置验证用的账户和密码\" class=\"headerlink\" title=\"1.配置验证用的账户和密码\"></a>1.配置验证用的账户和密码</h4><p>&emsp;&emsp;首先得到你的<code>password_hash</code>，首先点击<code>Setting</code>-&gt;<code>Setup authentification</code>,如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/3.png\" class=\"\"></div>  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/4.png\" class=\"\"></div>  \n&emsp;&emsp;进入之后设置你的相关信息，如下图所示：  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/5.png\" class=\"\"></div> \n\n<h4 id=\"2-修改站点配置文件-config-yml\"><a href=\"#2-修改站点配置文件-config-yml\" class=\"headerlink\" title=\"2.修改站点配置文件_config.yml\"></a>2.修改站点配置文件_config.yml</h4><p>&emsp;&emsp;在完成上述步骤后，在最下面会生成一段代码，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/6.png\" class=\"\"></div>  \n复制上图的代码，打开站点配置文件`_config.yml`，在最后添加如下代码(注意缩进吧，骚年)，保存即可： \n\n<pre><code>admin:\n  username: username\n  password_hash: $2a$10$L.XAIqIWgTc5S1zpvV3MEu7/rH34p4Is/nq824smv8EZ3lIPCp1su\n  secret: my super secret phrase  \n</code></pre>\n<h4 id=\"3-效果图\"><a href=\"#3-效果图\" class=\"headerlink\" title=\"3.效果图\"></a>3.效果图</h4><p>&emsp;&emsp;最后的效果如下所示（再登录需要账号密码认证了）：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/8.png\" class=\"\"></div>    \n\n<h3 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h3><div style=\"width:60%;margin:auto\"><img src=\"/posts/2214244853/7.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"Next 7.0 图片点击放大","url":"/posts/779553087/","content":"<p>&emsp;&emsp;FancyBox 是基于 JQuery 开发的类 Lightbox 插件，可以将图片放大查看，同时支持对放大的图片添加阴影效果，并对于一组相关的图片添加导航操作按纽。对于 Next 7.0+ 主题来说，当文章出现图片时，无法将图片放大查看，为此其内置了 FancyBox3，关于该插件的具体介绍见其<a href=\"https://github.com/theme-next/theme-next-fancybox3\">Github项目</a>   </p>\n<span id=\"more\"></span>  \n\n<h3 id=\"安装并导入\"><a href=\"#安装并导入\" class=\"headerlink\" title=\"安装并导入\"></a>安装并导入</h3><p>&emsp;&emsp;由于安装基于JQuery框架，所以要想正常使用，首先安装并导入JQuery（同时可以解决Next 7.0中导入一些第三方插件时出现的<code>$</code>未定义错误）。解决方法为，打开<code>themes/hexo-theme-next/layout/_partials/head</code> 文件夹中的 <code>head.swig</code>文件，在其中添加如下代码(直接添加到最后空白处就得)：<br>‘’’JavaScript  </p>\n<!-- 导入jquery -->\n<script src=\"https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js\"></script>\n<p>‘’’</p>\n<h3 id=\"修改主题配置文件-config-yml\"><a href=\"#修改主题配置文件-config-yml\" class=\"headerlink\" title=\"修改主题配置文件_config.yml\"></a>修改主题配置文件_config.yml</h3><p>&emsp;&emsp;找到主题配置文件中的<code>fancybox</code>字段，将<code>false</code>修改为<code>true</code>，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/779553087/1.png\" class=\"\"></div>  \n\n<h3 id=\"安装fancybox插件\"><a href=\"#安装fancybox插件\" class=\"headerlink\" title=\"安装fancybox插件\"></a>安装fancybox插件</h3><p>&emsp;&emsp;进入到 <code>hexo-theme-next/next/</code>文件夹下，运行 Git Bash，执行以下代码:<br>‘’’JavaScript<br>git clone <a href=\"https://github.com/theme-next/theme-next-fancybox3.git\">https://github.com/theme-next/theme-next-fancybox3.git</a> source/lib/fancy  </p>\n<p>‘’’</p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>&emsp;&emsp;安装后就可以发现你文章中的图片可以点击放大了，如下图，可点击放大  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/779553087/2.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"Next 7.0+ 球型标签云","url":"/posts/2565730293/","content":"<p>&emsp;&emsp;使用<code>tagcanvas.js</code>插件对样式进行修改实现球型标签云，修改步骤如下  </p>\n<h3 id=\"下载插件\"><a href=\"#下载插件\" class=\"headerlink\" title=\"下载插件\"></a>下载插件</h3><p>&emsp;&emsp;<a href=\"https://www.goat1000.com/tagcanvas.php#links\">点击这里</a>查看并下载插件，下载时右键下载链接，选择从链接另存文件为，保存<code>tagcanvas.js</code>文件，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/1.png\" class=\"\"></div>  \n&emsp;&emsp;将该插件下载后，放入 `hexo/themes/hexo-theme-next/source/js` 目录下。 \n<span id=\"more\"></span>\n\n<h3 id=\"新建标签云swig文件\"><a href=\"#新建标签云swig文件\" class=\"headerlink\" title=\"新建标签云swig文件\"></a>新建标签云swig文件</h3><p>&emsp;&emsp;在<code>/hexo/themes/hexo-theme-next/layout/_partials</code>目录下新建一个<code>tagcanvas.swig</code>的文件，并添加如下代码：  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;tags&quot;</span> id=<span class=\"string\">&quot;myTags&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;my3DTags&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Anything in here will be replaced on browsers that support the canvas element<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tags&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;tags&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &#123;&#123; tagcloud(&#123;</span></span><br><span class=\"line\"><span class=\"xml\">        min_font   : theme.tagcloud.min,</span></span><br><span class=\"line\"><span class=\"xml\">        max_font   : theme.tagcloud.max,</span></span><br><span class=\"line\"><span class=\"xml\">        amount     : theme.tagcloud.amount,</span></span><br><span class=\"line\"><span class=\"xml\">        color      : true,</span></span><br><span class=\"line\"><span class=\"xml\">        start_color: theme.tagcloud.start,</span></span><br><span class=\"line\"><span class=\"xml\">        end_color  : theme.tagcloud.end&#125;)</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/tagcanvas.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> &gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"keyword\">try</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      TagCanvas.Start(<span class=\"string\">&#x27;my3DTags&#x27;</span>,<span class=\"string\">&#x27;tags&#x27;</span>,&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">textFont</span>: <span class=\"string\">&#x27;Georgia,Optima&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">textColour</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">outlineColour</span>: <span class=\"string\">&#x27;black&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">weight</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">reverse</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">depth</span>: <span class=\"number\">0.8</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">maxSpeed</span>: <span class=\"number\">0.05</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">bgRadius</span>: <span class=\"number\">1</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">freezeDecel</span>: <span class=\"literal\">true</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125; <span class=\"keyword\">catch</span>(e) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;myTags&#x27;</span>).style.display = <span class=\"string\">&#x27;none&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"修改page-swig\"><a href=\"#修改page-swig\" class=\"headerlink\" title=\"修改page.swig\"></a>修改page.swig</h3><p>&emsp;&emsp;对 <code>themes/hexo-theme-next/layout/</code> 中的<code> page.swig</code> 文件进行修改,删除下图中标注位置的代码：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/2.png\" class=\"\"></div>  \n&emsp;&emsp;在被删除位置添加以下代码:  \n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;# tagcanvas plugin 球型云标签 #&#125;</span><br><span class=\"line\">&#123;% include &#x27;_partials/tagcanvas.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改-config-yml文件\"><a href=\"#修改-config-yml文件\" class=\"headerlink\" title=\"修改_config.yml文件\"></a>修改_config.yml文件</h3><p>&emsp;&emsp;打开主题下的配置文件，修改<code>tagcloud</code>字段，根据实际需求进行修改。  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 标签云设置页面</span><br><span class=\"line\">tagcloud:</span><br><span class=\"line\">    min: 12 # 最小字体尺寸，以px为单位</span><br><span class=\"line\">    max: 30 # 最大字体尺寸，以px为单位</span><br><span class=\"line\">    start: &quot;#ccc&quot; # 开始颜色 (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">    end: &quot;#111&quot; # 结束颜色 (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">    amount: 200 # 标签数量，当大于200个后，请进行更改  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"效果图（目前标签较少，多了就好看了）\"><a href=\"#效果图（目前标签较少，多了就好看了）\" class=\"headerlink\" title=\"效果图（目前标签较少，多了就好看了）\"></a>效果图（目前标签较少，多了就好看了）</h3><div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/3.png\" class=\"\"></div>  \n###  参考  \n&emsp;&emsp;参考段大佬的文章，<a href=\"https://alex-mcavoy.github.io/hexo/7be258c0.html\">点击这里访问大佬文章</a>","categories":["Hexo"],"tags":["Hexo","Daily"]},{"title":"智能合约与solidity","url":"/posts/3709194251/","content":"<h2 id=\"以太坊\"><a href=\"#以太坊\" class=\"headerlink\" title=\"以太坊\"></a>以太坊</h2><p>  &emsp;&emsp;以太坊（英语：Ethereum）是一个开源的有智能合约功能的公共区块链平台。通过其专用加密货币以太币（Ether，又称“以太坊”）提供去中心化的虚拟机（称为“以太虚拟机”Ethereum Virtual Machine）来处理点对点合约。 以太坊的概念首次在2013至2014年间由程序员维塔利克·布特林受比特币启发后提出，大意为“下一代加密货币与去中心化应用平台”，在2014年透过ICO众筹得以开始发展。 截至2018年6月，以太币是市值第二高的加密货币，以太坊亦被称为“第二代的区块链平台”，仅次于比特币。  </p>\n<span id=\"more\"></span>\n<h2 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h2><p>  &emsp;&emsp;智能合约（英语：Smart contract）是一种特殊协议，在区块链内制定合约时使用，当中内含了代码函数 (Function)，亦能与其他合约进行交互、做决策、存储资料及发送以太币等功能。智能合约主力提供验证及运行合约内所订立的条件。智能合约允许在没有第三方的情况下进行可信交易。这些交易可追踪且不可逆转。智能合约概念于1994年由一名身兼计算机科学家及密码学专家的学者尼克·萨博首次提出。智能合同的目的是提供优于传统合同方法的安全，并减少与合同相关的其他交易成本。</p>\n<h2 id=\"solidity\"><a href=\"#solidity\" class=\"headerlink\" title=\"solidity\"></a>solidity</h2><p>  &emsp;&emsp;Solidity是一种合约导向式语言，被应用于各种不同的区块链平台，其主要开发者为加文·伍德，Christian Reitwiessner，Alex Beregszaszi，Liana Husikyan，Yoichi Hirai和其他几位早期以太坊核心贡献者。Solidity 可使程序开发人员能在区块链上（例如以太坊）编写智能合约。</p>\n<h3 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h3><p>  &emsp;&emsp;Solidity的语法概念最早是由加文·伍德在2014年提出，后期则以Christian Reitwiessner所领导的以太坊团队Solidity接手开发。该语言是针对以太坊虚拟机（EVM）所设计的四种语言之一（其他的还有Serpent，LLL，Viper（实验中）和Mutan（已弃用））。有关这些语言的更多信息，请参阅以太坊编程语言。 Solidity是目前在以太坊及其他以太坊竞争平台中的主要编程语言，例如Monax及其BurrowHyperledger的区块链就是使用Tendermint完成共识机制。 SWIFT亦已经使用Solidity在Burrow上完成了概念验证。 康奈尔大学的研究人员指出，Solidity即是导致DAO在2016年被黑客攻击的部分原因之一。他表示：“这实际上并不是DAO合同本身的缺陷或漏洞；技术上来说，DAO确实是在EVM上如预期般地被运行，反而是Solidity将安全上的漏洞引入了合约之中，而这些漏洞不仅没被开发社区察觉，Solidity语言的设计者们也忽略了。</p>\n<h3 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h3><p> &emsp;&emsp;Solidity是一种静态类型的编程语言，用于开发在EVM上运行的智能合约。 Solidity被编译为可在EVM上运行的字节码。借由Solidity，开发人员能够编写出可自我运行其欲实现之商业逻辑的应用程序，该程序可被视为一份具权威性且永不可悔改的交易合约。对已具备程序编辑能力的人而言，编写Solidity的难易度就如同编写一般的编程语言。 Gavin Wood最初在规划Solidity语言时引用了ECMAScript的语法概念，使其对现有的Web开发者更容易入门；与ECMAScript不同的地方在于Solidity具有静态类型和0可变返回类型。而与目前其他EVM目标语言（如Serpent和Mutan）相比，其重要的差异在于Solidity具有一组复杂的成员变量使得合约可支持任意层次结构的映射和结构。Solidity也支持继承，包含C3线性化多重继承。 另外还引入了一个应用程序二进制接口（ABI），该接口（ABI）可在单一合同中实现多种类型安全的功能。<br>&emsp;&emsp;以下为使用Solidity编写的程序示例：  </p>\n<pre><code class=\"solidity\">pragma solidity ^0.4.0;\ncontract Helloworld&#123;\n    string  myName= &quot;Helloworld&quot;;\n    function getName()  public view returns(string)&#123;\n        return myName;\n    &#125;\n    function changeName(string _newName) public&#123;\n        myName= _newName;\n    &#125; \n    function pureTest(string _name) pure public returns(string) &#123;\n        return _name;\n    &#125;\n&#125;\n</code></pre>\n<p>&emsp;&emsp;上述主要摘自维基百科，旨在初步了解智能合约的同学有一个初步的认识。</p>\n","categories":["Solidity"],"tags":["Solidity"]},{"title":"你好呀~我的朋友","url":"/posts/3073087415/","content":"<h1 align=\"center\" style=\"font-weight:bold;\">hello world</h1>\n\n<hr>\n<p>​    这是用来测试专栏和标签的内容</p>\n<span id=\"more\"></span>\n\n<p>后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。</p>\n"},{"title":"你好呀~我的朋友","url":"/posts/3073087414/","content":"<h1 align=\"center\" style=\"font-weight:bold;\">hello world</h1>\n\n<hr>\n<p>​    这是以字2021年搭建个人博客的第一篇文章，目的有二：一来纪念下个人博客的搭建，虽然是简易版的，但也是在自己碌碌无为的这一段时间里的一个肉眼可见的小进步吧；二来测试一下使用typora进行markdown编写是否成功以及方便，同时练习一下基本的博客上传的方式，以便在后期能够快速、漂亮的上传自己的博客。</p>\n<span id=\"more\"></span>\n\n<p>后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。</p>\n"}]