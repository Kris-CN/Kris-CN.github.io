[{"title":"你好呀~我的朋友","url":"/posts/3073087414/","content":"<h1 align=\"center\" style=\"font-weight:bold;\">hello world</h1>\n\n<hr>\n<p>​    这是以字2021年搭建个人博客的第一篇文章，目的有二：一来纪念下个人博客的搭建，虽然是简易版的，但也是在自己碌碌无为的这一段时间里的一个肉眼可见的小进步吧；二来测试一下使用typora进行markdown编写是否成功以及方便，同时练习一下基本的博客上传的方式，以便在后期能够快速、漂亮的上传自己的博客。</p>\n<span id=\"more\"></span>\n\n<p>后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。后面的文字是用来测试是否能够自动形成摘录。</p>\n"},{"title":"Next 7.0 修改代码复制功能","url":"/posts/3140811385/","content":"<p>&emsp;&emsp;之前在网上一直找怎样修改代码背景和添加复制功能，结果全部都是Next 5.0版本的，配置起来比较麻烦，而且一直不成功，不过架不住人家配出来的好看，最后发现Next 6.3版本及以上版本已经内置了代码复制功能，直接修改就可。  </p>\n<span id=\"more\"></span>  \n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>&emsp;&emsp;修改主题下的配置文件<code>_config.yml</code>：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/3140811385/1.png\" class=\"\"></div>  \n\n<h4 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">codeblock:</span><br><span class=\"line\">  # Code Highlight theme</span><br><span class=\"line\">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class=\"line\">  # See: https://github.com/chriskempson/tomorrow-theme</span><br><span class=\"line\">  highlight_theme: night</span><br><span class=\"line\">  # Add copy button on codeblock</span><br><span class=\"line\">  copy_button:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    # Show text copy result.</span><br><span class=\"line\">    show_result: true</span><br><span class=\"line\">    # Available values: default | flat | mac</span><br><span class=\"line\">    style: mac  </span><br></pre></td></tr></table></figure>\n<h4 id=\"每篇一图\"><a href=\"#每篇一图\" class=\"headerlink\" title=\"每篇一图\"></a>每篇一图</h4><div style=\"width:60%;margin:auto\"><img src=\"/posts/3140811385/2.jpg\" class=\"\"></div>"},{"title":"Next 7.0 图片点击放大","url":"/posts/779553087/","content":"<p>&emsp;&emsp;FancyBox 是基于 JQuery 开发的类 Lightbox 插件，可以将图片放大查看，同时支持对放大的图片添加阴影效果，并对于一组相关的图片添加导航操作按纽。对于 Next 7.0+ 主题来说，当文章出现图片时，无法将图片放大查看，为此其内置了 FancyBox3，关于该插件的具体介绍见其<a href=\"https://github.com/theme-next/theme-next-fancybox3\">Github项目</a>   </p>\n<span id=\"more\"></span>  \n\n<h3 id=\"安装并导入\"><a href=\"#安装并导入\" class=\"headerlink\" title=\"安装并导入\"></a>安装并导入</h3><p>&emsp;&emsp;由于安装基于JQuery框架，所以要想正常使用，首先安装并导入JQuery（同时可以解决Next 7.0中导入一些第三方插件时出现的<code>$</code>未定义错误）。解决方法为，打开<code>themes/hexo-theme-next/layout/_partials/head</code> 文件夹中的 <code>head.swig</code>文件，在其中添加如下代码(直接添加到最后空白处就得)：<br>‘’’JavaScript  </p>\n<!-- 导入jquery -->\n<script src=\"https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js\"></script>\n<p>‘’’</p>\n<h3 id=\"修改主题配置文件-config-yml\"><a href=\"#修改主题配置文件-config-yml\" class=\"headerlink\" title=\"修改主题配置文件_config.yml\"></a>修改主题配置文件_config.yml</h3><p>&emsp;&emsp;找到主题配置文件中的<code>fancybox</code>字段，将<code>false</code>修改为<code>true</code>，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/779553087/1.png\" class=\"\"></div>  \n\n<h3 id=\"安装fancybox插件\"><a href=\"#安装fancybox插件\" class=\"headerlink\" title=\"安装fancybox插件\"></a>安装fancybox插件</h3><p>&emsp;&emsp;进入到 <code>hexo-theme-next/next/</code>文件夹下，运行 Git Bash，执行以下代码:<br>‘’’JavaScript<br>git clone <a href=\"https://github.com/theme-next/theme-next-fancybox3.git\">https://github.com/theme-next/theme-next-fancybox3.git</a> source/lib/fancy  </p>\n<p>‘’’</p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>&emsp;&emsp;安装后就可以发现你文章中的图片可以点击放大了，如下图，可点击放大  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/779553087/2.jpg\" class=\"\"></div>"},{"title":"Next 7.0+ 球型标签云","url":"/posts/2565730293/","content":"<p>&emsp;&emsp;使用<code>tagcanvas.js</code>插件对样式进行修改实现球型标签云，修改步骤如下  </p>\n<h3 id=\"下载插件\"><a href=\"#下载插件\" class=\"headerlink\" title=\"下载插件\"></a>下载插件</h3><p>&emsp;&emsp;<a href=\"https://www.goat1000.com/tagcanvas.php#links\">点击这里</a>查看并下载插件，下载时右键下载链接，选择从链接另存文件为，保存<code>tagcanvas.js</code>文件，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/1.png\" class=\"\"></div>  \n&emsp;&emsp;将该插件下载后，放入 `hexo/themes/hexo-theme-next/source/js` 目录下。 \n<span id=\"more\"></span>\n\n<h3 id=\"新建标签云swig文件\"><a href=\"#新建标签云swig文件\" class=\"headerlink\" title=\"新建标签云swig文件\"></a>新建标签云swig文件</h3><p>&emsp;&emsp;在<code>/hexo/themes/hexo-theme-next/layout/_partials</code>目录下新建一个<code>tagcanvas.swig</code>的文件，并添加如下代码：  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;tags&quot;</span> id=<span class=\"string\">&quot;myTags&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;my3DTags&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Anything in here will be replaced on browsers that support the canvas element<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tags&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;tags&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &#123;&#123; tagcloud(&#123;</span></span><br><span class=\"line\"><span class=\"xml\">        min_font   : theme.tagcloud.min,</span></span><br><span class=\"line\"><span class=\"xml\">        max_font   : theme.tagcloud.max,</span></span><br><span class=\"line\"><span class=\"xml\">        amount     : theme.tagcloud.amount,</span></span><br><span class=\"line\"><span class=\"xml\">        color      : true,</span></span><br><span class=\"line\"><span class=\"xml\">        start_color: theme.tagcloud.start,</span></span><br><span class=\"line\"><span class=\"xml\">        end_color  : theme.tagcloud.end&#125;)</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/tagcanvas.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> &gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"keyword\">try</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      TagCanvas.Start(<span class=\"string\">&#x27;my3DTags&#x27;</span>,<span class=\"string\">&#x27;tags&#x27;</span>,&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">textFont</span>: <span class=\"string\">&#x27;Georgia,Optima&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">textColour</span>: <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">outlineColour</span>: <span class=\"string\">&#x27;black&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">weight</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">reverse</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">depth</span>: <span class=\"number\">0.8</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">maxSpeed</span>: <span class=\"number\">0.05</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">bgRadius</span>: <span class=\"number\">1</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">freezeDecel</span>: <span class=\"literal\">true</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125; <span class=\"keyword\">catch</span>(e) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;myTags&#x27;</span>).style.display = <span class=\"string\">&#x27;none&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"修改page-swig\"><a href=\"#修改page-swig\" class=\"headerlink\" title=\"修改page.swig\"></a>修改page.swig</h3><p>&emsp;&emsp;对 <code>themes/hexo-theme-next/layout/</code> 中的<code> page.swig</code> 文件进行修改,删除下图中标注位置的代码：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/2.png\" class=\"\"></div>  \n&emsp;&emsp;在被删除位置添加以下代码:  \n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;# tagcanvas plugin 球型云标签 #&#125;</span><br><span class=\"line\">&#123;% include &#x27;_partials/tagcanvas.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改-config-yml文件\"><a href=\"#修改-config-yml文件\" class=\"headerlink\" title=\"修改_config.yml文件\"></a>修改_config.yml文件</h3><p>&emsp;&emsp;打开主题下的配置文件，修改<code>tagcloud</code>字段，根据实际需求进行修改。  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 标签云设置页面</span><br><span class=\"line\">tagcloud:</span><br><span class=\"line\">    min: 12 # 最小字体尺寸，以px为单位</span><br><span class=\"line\">    max: 30 # 最大字体尺寸，以px为单位</span><br><span class=\"line\">    start: &quot;#ccc&quot; # 开始颜色 (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">    end: &quot;#111&quot; # 结束颜色 (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">    amount: 200 # 标签数量，当大于200个后，请进行更改  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"效果图（目前标签较少，多了就好看了）\"><a href=\"#效果图（目前标签较少，多了就好看了）\" class=\"headerlink\" title=\"效果图（目前标签较少，多了就好看了）\"></a>效果图（目前标签较少，多了就好看了）</h3><div style=\"width:50%;margin:auto\"><img src=\"/posts/2565730293/3.png\" class=\"\"></div>  \n###  参考  \n&emsp;&emsp;参考段大佬的文章，<a href=\"https://alex-mcavoy.github.io/hexo/7be258c0.html\">点击这里访问大佬文章</a>","categories":["Hexo"],"tags":["Hexo","Daily"]},{"title":"安装Hexo后台管理系统","url":"/posts/2214244853/","content":"<p>&emsp;&emsp;由于使用Hexo搭建，不使用后台管理的时候，很难像WordPress和typecho那样直接写博文，而是要通过<code>hexo new &#39;文章名&#39;</code>来实现，很明显，这样编写博文十分耗时而且非常不方便，有了后台管理系统之后，可以使用一种可视化的方法编写md文件，设置标签和分类也是非常方便，下面开始介绍配置方式：  </p>\n<span id=\"more\"></span>  \n<h3 id=\"安装Hexo-admin\"><a href=\"#安装Hexo-admin\" class=\"headerlink\" title=\"安装Hexo-admin\"></a>安装Hexo-admin</h3><p>&emsp;&emsp;可以直接查看其<a href=\"https://github.com/jaredly/hexo-admin\">Github项目</a>  </p>\n<p>&emsp;&emsp;进入<code>/hexo</code>目录(hexo根目录)，使用命令<code>npm install --save hexo-admin</code>安装hexo-admin。  </p>\n<h3 id=\"运行Hexo-admin\"><a href=\"#运行Hexo-admin\" class=\"headerlink\" title=\"运行Hexo-admin\"></a>运行Hexo-admin</h3><p>&emsp;&emsp;安装完毕后运行<code>hexo s</code>。出现下面运行结果：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/1.png\" class=\"\"></div>  \n&emsp;&emsp;根据运行结果，在浏览器地址栏中输入`http://localhost:4000/admin`进入后台管理界面,如下图所示：  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/2.png\" class=\"\"></div>  \n\n<h3 id=\"配置安全认证\"><a href=\"#配置安全认证\" class=\"headerlink\" title=\"配置安全认证\"></a>配置安全认证</h3><p>&emsp;&emsp;为了保证安全，在进入后台时要进行身份验证（总不能光着吧），增加一层账户密码的逻辑校验，流程如下：  </p>\n<h4 id=\"1-配置验证用的账户和密码\"><a href=\"#1-配置验证用的账户和密码\" class=\"headerlink\" title=\"1.配置验证用的账户和密码\"></a>1.配置验证用的账户和密码</h4><p>&emsp;&emsp;首先得到你的<code>password_hash</code>，首先点击<code>Setting</code>-&gt;<code>Setup authentification</code>,如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/3.png\" class=\"\"></div>  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/4.png\" class=\"\"></div>  \n&emsp;&emsp;进入之后设置你的相关信息，如下图所示：  \n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/5.png\" class=\"\"></div> \n\n<h4 id=\"2-修改站点配置文件-config-yml\"><a href=\"#2-修改站点配置文件-config-yml\" class=\"headerlink\" title=\"2.修改站点配置文件_config.yml\"></a>2.修改站点配置文件_config.yml</h4><p>&emsp;&emsp;在完成上述步骤后，在最下面会生成一段代码，如下图所示：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/6.png\" class=\"\"></div>  \n复制上图的代码，打开站点配置文件`_config.yml`，在最后添加如下代码(注意缩进吧，骚年)，保存即可： \n\n<pre><code>admin:\n  username: username\n  password_hash: $2a$10$L.XAIqIWgTc5S1zpvV3MEu7/rH34p4Is/nq824smv8EZ3lIPCp1su\n  secret: my super secret phrase  \n</code></pre>\n<h4 id=\"3-效果图\"><a href=\"#3-效果图\" class=\"headerlink\" title=\"3.效果图\"></a>3.效果图</h4><p>&emsp;&emsp;最后的效果如下所示（再登录需要账号密码认证了）：  </p>\n<div style=\"width:50%;margin:auto\"><img src=\"/posts/2214244853/8.png\" class=\"\"></div>    \n\n<h3 id=\"每日一图\"><a href=\"#每日一图\" class=\"headerlink\" title=\"每日一图\"></a>每日一图</h3><div style=\"width:60%;margin:auto\"><img src=\"/posts/2214244853/7.jpg\" class=\"\"></div>","categories":["Hexo"],"tags":["Hexo"]},{"title":"智能合约与solidity","url":"/posts/3709194251/","content":"<h2 id=\"以太坊\"><a href=\"#以太坊\" class=\"headerlink\" title=\"以太坊\"></a>以太坊</h2><p>  &emsp;&emsp;以太坊（英语：Ethereum）是一个开源的有智能合约功能的公共区块链平台。通过其专用加密货币以太币（Ether，又称“以太坊”）提供去中心化的虚拟机（称为“以太虚拟机”Ethereum Virtual Machine）来处理点对点合约。 以太坊的概念首次在2013至2014年间由程序员维塔利克·布特林受比特币启发后提出，大意为“下一代加密货币与去中心化应用平台”，在2014年透过ICO众筹得以开始发展。 截至2018年6月，以太币是市值第二高的加密货币，以太坊亦被称为“第二代的区块链平台”，仅次于比特币。  </p>\n<span id=\"more\"></span>\n<h2 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h2><p>  &emsp;&emsp;智能合约（英语：Smart contract）是一种特殊协议，在区块链内制定合约时使用，当中内含了代码函数 (Function)，亦能与其他合约进行交互、做决策、存储资料及发送以太币等功能。智能合约主力提供验证及运行合约内所订立的条件。智能合约允许在没有第三方的情况下进行可信交易。这些交易可追踪且不可逆转。智能合约概念于1994年由一名身兼计算机科学家及密码学专家的学者尼克·萨博首次提出。智能合同的目的是提供优于传统合同方法的安全，并减少与合同相关的其他交易成本。</p>\n<h2 id=\"solidity\"><a href=\"#solidity\" class=\"headerlink\" title=\"solidity\"></a>solidity</h2><p>  &emsp;&emsp;Solidity是一种合约导向式语言，被应用于各种不同的区块链平台，其主要开发者为加文·伍德，Christian Reitwiessner，Alex Beregszaszi，Liana Husikyan，Yoichi Hirai和其他几位早期以太坊核心贡献者。Solidity 可使程序开发人员能在区块链上（例如以太坊）编写智能合约。</p>\n<h3 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h3><p>  &emsp;&emsp;Solidity的语法概念最早是由加文·伍德在2014年提出，后期则以Christian Reitwiessner所领导的以太坊团队Solidity接手开发。该语言是针对以太坊虚拟机（EVM）所设计的四种语言之一（其他的还有Serpent，LLL，Viper（实验中）和Mutan（已弃用））。有关这些语言的更多信息，请参阅以太坊编程语言。 Solidity是目前在以太坊及其他以太坊竞争平台中的主要编程语言，例如Monax及其BurrowHyperledger的区块链就是使用Tendermint完成共识机制。 SWIFT亦已经使用Solidity在Burrow上完成了概念验证。 康奈尔大学的研究人员指出，Solidity即是导致DAO在2016年被黑客攻击的部分原因之一。他表示：“这实际上并不是DAO合同本身的缺陷或漏洞；技术上来说，DAO确实是在EVM上如预期般地被运行，反而是Solidity将安全上的漏洞引入了合约之中，而这些漏洞不仅没被开发社区察觉，Solidity语言的设计者们也忽略了。</p>\n<h3 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h3><p> &emsp;&emsp;Solidity是一种静态类型的编程语言，用于开发在EVM上运行的智能合约。 Solidity被编译为可在EVM上运行的字节码。借由Solidity，开发人员能够编写出可自我运行其欲实现之商业逻辑的应用程序，该程序可被视为一份具权威性且永不可悔改的交易合约。对已具备程序编辑能力的人而言，编写Solidity的难易度就如同编写一般的编程语言。 Gavin Wood最初在规划Solidity语言时引用了ECMAScript的语法概念，使其对现有的Web开发者更容易入门；与ECMAScript不同的地方在于Solidity具有静态类型和0可变返回类型。而与目前其他EVM目标语言（如Serpent和Mutan）相比，其重要的差异在于Solidity具有一组复杂的成员变量使得合约可支持任意层次结构的映射和结构。Solidity也支持继承，包含C3线性化多重继承。 另外还引入了一个应用程序二进制接口（ABI），该接口（ABI）可在单一合同中实现多种类型安全的功能。<br>&emsp;&emsp;以下为使用Solidity编写的程序示例：  </p>\n<pre><code class=\"solidity\">pragma solidity ^0.4.0;\ncontract Helloworld&#123;\n    string  myName= &quot;Helloworld&quot;;\n    function getName()  public view returns(string)&#123;\n        return myName;\n    &#125;\n    function changeName(string _newName) public&#123;\n        myName= _newName;\n    &#125; \n    function pureTest(string _name) pure public returns(string) &#123;\n        return _name;\n    &#125;\n&#125;\n</code></pre>\n<p>&emsp;&emsp;上述主要摘自维基百科，旨在初步了解智能合约的同学有一个初步的认识。</p>\n","categories":["Solidity"],"tags":["Solidity"]}]